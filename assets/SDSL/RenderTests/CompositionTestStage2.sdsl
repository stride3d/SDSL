// PSMain(ExpectedResult=#BFBFFFFF)

namespace Stride.Shaders.Tests;

shader CompositionBase
{
	stage float BaseStageMethod1()
	{
		return 0.25;
	}

	float ComputeBase()
	{
		return 0.1;
	}

	float ComputeThis()
	{
		return 0.1;
	}
};
 
shader CompositionShaderA : CompositionBase
{
	stage override float BaseStageMethod1()
	{
		return base.BaseStageMethod1() + 0.25;
	}

	override float ComputeThis()
	{
		return this.BaseStageMethod1();
	}
};
 
shader CompositionShaderB : CompositionBase
{
	stage override float BaseStageMethod1()
	{
		return base.BaseStageMethod1() + 0.25;
	}

	override float ComputeThis()
	{
		return this.BaseStageMethod1();
	}
};
 
shader CompositionTest
{
    stream float4 ColorTarget : SV_Target0;

	CompositionBase Comp0;
	CompositionBase Comp1;
 
	void PSMain()
	{
		streams.ColorTarget = float4(Comp0.ComputeThis(), Comp1.ComputeThis(), 1.0, 1.0);
	}
};

effect CompositionTestStage2
{
	mixin CompositionTest;
	mixin compose Comp0 = CompositionShaderA;
	mixin compose Comp1 = CompositionShaderB;
}