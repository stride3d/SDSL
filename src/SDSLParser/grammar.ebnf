(* := is an extension to define a literal with no whitespace between repeats and sequences *)
ws := {? Terminals.WhiteSpace ?};
eol := ? Terminals.Eol ?, {? Terminals.Eol ?};

unary_operator ::= 
    &
    | *
    | +
    | -
    | ~
    | !;




letter = ? Terminals.Letter ?, {? Terminals.Letter ?};
letter_or_digit = ? Terminals.LetterOrDigit ?, {? Terminals.LetterOrDigit ?};

identifier := letter, {"_", letter_or_digit};

bracket_value = simple value, {simple value};

expr := [eol], [ws], [eol];

block := "{", expr, "}";

grammar = ws, "shader", identifier, block;