
EndOfFileToken ::= EOF

compilationUnit::=   topLevelDeclaration* EndOfFileToken


topLevelDeclaration::=  classDefinition
	|   interfaceDefinition
	|   variableDeclarationStatement
	|   structDefinition
	|   constantBuffer
	|   functionDefinition
	|   functionDeclaration

classDefinition::=  ClassKeyword Name BaseListOpt? 
	    OpenBraceToken classMemberDeclaration* CloseBraceToken
		SemicolonToken

BaseType ::= Identifier
baseList::=  ColonToken BaseType


classMemberDeclaration::=  variableDeclarationStatement
	|   functionDefinition
	|   functionDeclaration


constantBuffer::=  CBufferKeyword Name registerAllocation?
	    OpenBraceToken (variableDeclarationStatement)+ CloseBraceToken
		SemicolonToken?



variableDeclarationStatement ::=  variableDeclaration SemicolonToken




functionDefinition::=  attribute* functionType (ClassName ColonColonToken)? Name
	    OpenParenToken functionParams? CloseParenToken
		SemanticOpt block SemicolonTokenOpt?


functionDeclaration::=  attribute* functionType Name
	    OpenParenToken functionParams? CloseParenToken
		SemanticOpt SemicolonToken


functionType::=  type
	|   Void


functionParams::=  functionParam (Comma functionParam)*


functionParam::=  storageFlags type variableDeclarator

InterfaceKeyword ::= Interface

interfaceDefinition::=  InterfaceKeyword Name
	    OpenBraceToken functionDeclaration* CloseBraceToken
		SemicolonToken

StructKeyword ::= Struct

structDefinition::=  StructKeyword Name
	    OpenBraceToken (variableDeclarationStatement)+ CloseBraceToken
		SemicolonToken


semantic::=  ColonToken Name



attributeArguments::=  literalExpr (Comma literalExpr)*


attributeArgumentList::=  OpenParenToken attributeArguments CloseParenToken

OpenBracketToken ::= LeftBracket
CloseBracketToken ::= RightBracket
attribute::=  OpenBracketToken Name attributeArgumentList? CloseBracketToken



block::=  LeftBrace statement* RightBrace

Stmt ::= block
indentedEmbeddedStatement::=  
    embeddedStatement 
	|   LeftBrace Stmt


statement::=  localDeclarationStatement
	|   embeddedStatement
	|   classDefinition
	|   interfaceDefinition
	|   structDefinition


localDeclarationStatement::=  variableDeclaration SemicolonToken


forInitializer::=  
    variableDeclaration 
	|   expression (Comma expression)* 


forIncrementors::=  expression (Comma expression)*



switchLabel::=  CaseKeyword Expr ColonToken 
	|   DefaultKeyword ColonToken           


switchSection::=  switchLabel+ statement+


IfKeyword ::= If
embeddedStatement::=  SemicolonToken
	|   block
	|   Expr SemicolonToken


	|   attribute* IfKeyword OpenParenToken expression CloseParenToken indentedEmbeddedStatement elseClause?
	|   attribute* SwitchKeyword OpenParenToken Expr CloseParenToken OpenBraceToken switchSection* CloseBraceToken    
	
	|   attribute* While OpenParenToken expression CloseParenToken indentedEmbeddedStatement
	|   attribute* Do indentedEmbeddedStatement While OpenParenToken expression CloseParenToken SemicolonToken
	|   attribute* For OpenParenToken forInitializer? FirstSemicolonToken expression? SecondSemicolonToken forIncrementors? CloseParenToken indentedEmbeddedStatement 

	|   Break SemicolonToken 
	|   Continue SemicolonToken 
	|   Discard SemicolonToken 
	|   Return Expr? SemicolonToken 


elseClause::=  ElseKeyword indentedEmbeddedStatement



expression::=  literalExpr                                                                              
	|   Identifier                                                                               
    |   OpenParenToken expression CloseParenToken                           
    |   OpenParenToken type (arrayRankSpecifier)* CloseParenToken Expr 
    |   Expr DotToken Identifier                                           
	|   scalarOrVectorOrMatrixType argumentList                                                  
    |   Expr argumentList                                                             
    |   Expr LeftBracket expression RightBracket       
    |   Expr postfixUnaryOperator                                            
    |   prefixUnaryOperator Expr                                             
    |   expression binaryOperator expression                                 
	|   expression Question TrueExpr ColonToken FalseExpr 
    |   right expression assignmentOperator expression               


literalExpr::=  literal


postfixUnaryOperator::=  PlusPlus
	|   MinusMinus


prefixUnaryOperator::=  Plus
	|   Minus
	|   Not
	|   Tilde
	|   PlusPlus
	|   MinusMinus


binaryOperator::=  Star
	|   Div
	|   Mod
	|   Plus
	|   Minus
	|   LeftShift
	|   RightShift
	|   Less
	|   Greater
	|   LessEqual
	|   GreaterEqual
	|   Equal
	|   NotEqual
	|   And
	|   Caret
	|   Or
	|   AndAnd
	|   OrOr


assignmentOperator::=  Assign
	|   StarAssign
	|   DivAssign
	|   ModAssign
	|   PlusAssign
	|   MinusAssign
	|   LeftShiftAssign
	|   RightShiftAssign
	|   AndAssign
	|   XorAssign
	|   OrAssign


argumentList::=  OpenParenToken arguments? CloseParenToken


arguments::=  expression (Comma expression)*



variableDeclaration::=  storageFlags type variableDeclarators


variableDeclarators::=  variableDeclarator (Comma variableDeclarator)*



variableDeclarator::=  
    Name
    | (ArrayRankSpecifiers)*
    | packOffsetNode?
    | RegisterAllocation
    | SemanticOpt
    | variableInitializer?


arrayRankSpecifier::=  OpenBracketToken expression? CloseBracketToken



packOffsetNode::=  ColonToken Packoffset OpenParenToken
	    PackOffsetRegister (DotToken PackOffsetComponent)?
		CloseParenToken


storageFlags::=  storageFlag*


storageFlag

	|   RowMajor
	|   ColumnMajor

	|   Extern
	|   Precise
	|   Shared
	|   Groupshared
	|   Static
	|   Uniform
	|   Volatile
	|   Linear
	|   Centroid
	|   Nointerpolation
	|   Noperspective
	|   Sample
	|   In
	|   Out
	|   Inout
	|   Point
	|   Line_
	|   Triangle
	|   LineAdj
	|   TriangleAdj


type::=  predefinedType
	|   userDefinedType


predefinedType::=  bufferPredefinedType
	|   byteAddressBufferPredefinedType
	|   inlineStructPredefinedType
	|   patchPredefinedType
	|   matrixType
	|   genericMatrixPredefinedType
	|   samplerStatePredefinedType
	|   scalarType
	|   streamOutputPredefinedType
	|   structuredBufferPredefinedType
	|   texturePredefinedType
	|   genericTexturePredefinedType
	|   msTexturePredefinedType
	|   vectorType
	|   genericVectorType


bufferPredefinedType::=  bufferType Less scalarOrVectorType Greater


bufferType::=  Buffer
	|   RWBuffer


byteAddressBufferPredefinedType::=  byteAddressBufferType


byteAddressBufferType::=  ByteAddressBuffer
	|   RWByteAddressBuffer


inlineStructPredefinedType::=  Struct OpenBraceToken
	    (variableDeclarationStatement)+
		CloseBraceToken


patchPredefinedType::=  patchType Less
	    userDefinedType Comma IntegerLiteral
		Greater


patchType::=  InputPatch
	|   OutputPatch


samplerStatePredefinedType::=  Sampler
	|   SamplerState
	|   SamplerComparisonState


scalarType::=  Bool
	|   Int
	|   Unsigned Int
	|   Dword
	|   Uint
	|   Half
	|   Float
	|   Double


streamOutputPredefinedType::=  streamOutputObjectType Less type Greater


streamOutputObjectType::=  PointStream
	|   LineStream
	|   TriangleStream


structuredBufferPredefinedType::=  structuredBufferName Less scalarOrVectorOrUserDefinedType Greater


structuredBufferName::=  AppendStructuredBuffer
	|   ConsumeStructuredBuffer
	|   RWStructuredBuffer
	|   StructuredBuffer


textureType::=  Texture1D
	|   Texture1DArray
	|   Texture2D
	|   Texture2DArray
	|   Texture3D
	|   TextureCube
	|   TextureCubeArray


texturePredefinedType::=  textureType


genericTexturePredefinedType::=  textureType Less scalarOrVectorType Greater


textureTypeMS::=  Texture2DMS
	|   Texture2DMSArray


msTexturePredefinedType::=  textureTypeMS Less scalarOrVectorType Comma IntegerLiteral Greater


vectorType::=  Vector
	|   Bool1
	|   Bool2
	|   Bool3
	|   Bool4
	|   Int1
	|   Int2
	|   Int3
	|   Int4
	|   Uint1
	|   Uint2
	|   Uint3
	|   Uint4
	|   Half1
	|   Half2
	|   Half3
	|   Half4
	|   Float1
	|   Float2
	|   Float3
	|   Float4
	|   Double1
	|   Double2
	|   Double3
	|   Double4


genericVectorType::=  
    Vector Less scalarType Comma IntegerLiteral Greater


scalarOrVectorType::=  scalarType
	|   vectorType


scalarOrVectorOrUserDefinedType::=  scalarType
	|   vectorType
	|   userDefinedType


scalarOrVectorOrMatrixType::=  scalarType
	|   vectorType
	|   matrixType


matrixType::=  Matrix
	|   Bool1x1
	|   Bool1x2
	|   Bool1x3
	|   Bool1x4
	|   Bool2x1
	|   Bool2x2
	|   Bool2x3
	|   Bool2x4
	|   Bool3x1
	|   Bool3x2
	|   Bool3x3
	|   Bool3x4
	|   Bool4x1
	|   Bool4x2
	|   Bool4x3
	|   Bool4x4
	|   Int1x1
	|   Int1x2
	|   Int1x3
	|   Int1x4
	|   Int2x1
	|   Int2x2
	|   Int2x3
	|   Int2x4
	|   Int3x1
	|   Int3x2
	|   Int3x3
	|   Int3x4
	|   Int4x1
	|   Int4x2
	|   Int4x3
	|   Int4x4
	|   Uint1x1
	|   Uint1x2
	|   Uint1x3
	|   Uint1x4
	|   Uint2x1
	|   Uint2x2
	|   Uint2x3
	|   Uint2x4
	|   Uint3x1
	|   Uint3x2
	|   Uint3x3
	|   Uint3x4
	|   Uint4x1
	|   Uint4x2
	|   Uint4x3
	|   Uint4x4
	|   Half1x1
	|   Half1x2
	|   Half1x3
	|   Half1x4
	|   Half2x1
	|   Half2x2
	|   Half2x3
	|   Half2x4
	|   Half3x1
	|   Half3x2
	|   Half3x3
	|   Half3x4
	|   Half4x1
	|   Half4x2
	|   Half4x3
	|   Half4x4
	|   Float1x1
	|   Float1x2
	|   Float1x3
	|   Float1x4
	|   Float2x1
	|   Float2x2
	|   Float2x3
	|   Float2x4
	|   Float3x1
	|   Float3x2
	|   Float3x3
	|   Float3x4
	|   Float4x1
	|   Float4x2
	|   Float4x3
	|   Float4x4
	|   Double1x1
	|   Double1x2
	|   Double1x3
	|   Double1x4
	|   Double2x1
	|   Double2x2
	|   Double2x3
	|   Double2x4
	|   Double3x1
	|   Double3x2
	|   Double3x3
	|   Double3x4
	|   Double4x1
	|   Double4x2
	|   Double4x3
	|   Double4x4


genericMatrixPredefinedType::=  Matrix Less scalarType Comma
	    IntegerLiteral Comma IntegerLiteral
		Greater


userDefinedType::=  Name


registerAllocation::=  Colon Register OpenParenToken Identifier CloseParenToken


variableInitializer::=  
    Assign standardVariableInitializer
	|   OpenBraceToken samplerStateProperty* CloseBraceToken 


standardVariableInitializer::=  
    LeftBrace arrayElementInitializers RightBrace 
	|   Expr


arrayElementInitializers::=  standardVariableInitializer (Comma standardVariableInitializer)* Comma?


samplerStateProperty::=  Name Assign Expr SemicolonToken


literal::=  
    True
	|   False
    |   FloatLiteral
    |   IntegerLiteral
    |   StringLiteral



directive::=  ifDirective
	|   ifDefDirective
	|   ifNDefDirective
	|   elseDirective
	|   elifDirective
	|   endIfDirective
	|   objectLikeDefineDirective
	|   includeDirective
	|   lineDirective


ifDirective::=  HashToken IfKeyword directiveExpression EndOfDirectiveToken


ifDefDirective::=  HashToken IfDef Name EndOfDirectiveToken


ifNDefDirective::=  HashToken IfNDef Name EndOfDirectiveToken


elseDirective::=  HashToken ElseKeyword EndOfDirectiveToken


elifDirective::=  HashToken Elif directiveExpression EndOfDirectiveToken


endIfDirective::=  HashToken EndIf EndOfDirectiveToken


objectLikeDefineDirective::=  HashToken Define NameOrKeyword (EndOfDirective)* EndOfDirectiveToken


includeDirective::=  HashToken Include StringLiteral EndOfDirectiveToken


lineDirective::=  HashToken Line_ IntegerLiteral StringLiteral EndOfDirectiveToken

Function ::= Defined

directiveExpression::=  literal                                                                     
	|   identifierOrKeyword
    |   OpenParenToken directiveExpression CloseParenToken
    |   Function OpenParenToken Identifier CloseParenToken
    |   directiveExpression postfixUnaryOperator                      
    |   prefixUnaryOperator directiveExpression                       
    |   directiveExpression binaryOperator directiveExpression  


identifierOrKeyword ::=  
    AppendStructuredBuffer
	|   Buffer
	|   ByteAddressBuffer
	|   Break
	|   Case
	|   CBuffer
	|   Centroid
	|   Class
	|   ColumnMajor
	|   Const
	|   ConsumeStructuredBuffer
	|   Continue
	|   Default
	|   Discard
	|   Do
	|   Else
	|   Extern
	|   For
	|   Groupshared
	|   If
	|   In
	|   Inout
	|   InputPatch
	|   Interface
	|   Line_
	|   LineAdj
	|   Linear
	|   LineStream
	|   Matrix
	|   Nointerpolation
	|   Noperspective
	|   Out
	|   OutputPatch
	|   Packoffset
	|   Point
	|   PointStream
	|   Precise
	|   Register
	|   Return
	|   RowMajor
	|   RWBuffer
	|   RWByteAddressBuffer
	|   RWStructuredBuffer
	|   Sample
	|   Sampler
	|   SamplerComparisonState
	|   SamplerState
	|   Shared
	|   Static
	|   Struct
	|   StructuredBuffer
	|   Switch
	|   TextureTypes
	|   Triangle
	|   TriangleAdj
	|   TriangleStream
	|   Uniform
    |   ValueTypes
	|   Vector
	|   Volatile
	|   Void
	|   While
	|   Identifier

CloseBraceToken ::= RightBrace
Name ::= Identifier
BaseListOpt ::= baselist?

CBufferKeyword ::= CBuffer
SemanticOpt ::= semantic

ArrayRankSpecifiers ::= arrayRankSpecifier
Condition ::= expression
CBufferKeyword ::= CBuffer

CloseParenToken ::= RightParen
ColonColonToken ::= ColonColon
CaseKeyword ::= Case
ColonToken ::= Colon 
DotToken ::= Dot
DefaultKeyword ::= Default
EqualsToken ::= Assign
Expr ::= expression
ElseKeyword ::= Else
EndOfDirectiveToken ::= EndOfDirective
HashToken ::= Hash
IfKeyword ::= If
OpenBraceToken ::= LeftBrace
OpenParenToken ::= LeftParen
OpenParenToken ::= LeftParen
PackOffsetRegister ::= Identifier
PackOffsetComponent ::= Identifier
RegisterAllocation ::= registerAllocation?
SemanticOpt ::= semantic?
SemicolonTokenOpt ::= Semi
SemicolonToken ::= Semi
SwitchKeyword ::= Switch


