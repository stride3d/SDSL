WS ::= ? Terminals.Whitespace ?
Eol ::= ? Terminals.Eol ?
Eof ::= ? Terminals.End ?
Space ::= WS | Eol | Eof
Spaces ::= Space*
SpacesWithLineBreak ::= WS* Eol


AppendStructuredBuffer ::= 'AppendStructuredBuffer'
Bool ::= 'bool'
BoolVec ::= Bool [1-4]
BoolMat ::= BoolVec 'x' [1-4]
Buffer ::= 'Buffer'
ByteAddressBuffer ::= 'ByteAddressBuffer'
Break ::= 'break'
Case ::= 'case'
CBuffer ::= 'cbuffer'
Centroid ::= 'centroid'
Class ::= 'class'
ColumnMajor ::= 'column_major'
Const ::= 'const'
ConsumeStructuredBuffer ::= 'ConsumeStructuredBuffer'
Continue ::= 'continue'
Default ::= 'default'
Discard ::= 'discard'
Do ::= 'do'
Double ::= 'double'
DoubleVec ::= Double [1-4]
DoubleMat ::= DoubleVec 'x' [1-4]
Else ::= 'else'
Extern ::= 'extern'
Float ::= 'float'
FloatVec ::= Float [1-4]
FloatMat ::= FloatVec 'x' [1-4]
For ::= 'for'
Groupshared ::= 'groupshared'
Half ::= 'half'
HalfVec ::= Half [1-4]
HalfMat ::= HalfVec 'x' [1-4]
If ::= 'if'
In ::= 'in'
Inout ::= 'inout' | 'in out'
InputPatch ::= 'InputPatch'
Int ::= 'int'
IntVec ::= Int [1-4]
IntMat ::= IntVec 'x' [1-4]
Interface ::= 'interface'
Line_ ::= 'line'
LineAdj ::= 'lineadj'
Linear ::= 'linear'
LineStream ::= 'LineStream'
Long ::= 'long'
Matrix ::= 'matrix'
Nointerpolation ::= 'nointerpolation'
Noperspective ::= 'noperspective'
Out ::= 'out'
OutputPatch ::= 'OutputPatch'
Packoffset ::= 'packoffset'
Point ::= 'point'
PointStream ::= 'PointStream'
Precise ::= 'precise'
Register ::= 'register'
Return ::= 'return'
RowMajor ::= 'row_major'
RWBuffer ::= 'RWBuffer'
RWByteAddressBuffer ::= 'RWByteAddressBuffer'
RWStructuredBuffer ::= 'RWStructuredBuffer'
Sample ::= 'sample'
Sampler ::= 'sampler'
SamplerComparisonState ::= 'SamplerComparisonState'
SamplerState ::= 'SamplerState'
Shared ::= 'shared'
Static ::= 'static'
Struct ::= 'struct'
StructuredBuffer ::= 'StructuredBuffer'
Switch ::= 'switch'
TextureTypes ::= 
    (('Texture' - 'Texture2DMS') ([1-3] 'D') ('Array'?))
    | ('Texture2DMS' 'Array'?)
    | ('TextureCube' 'Array'?)

Triangle ::= 'triangle'
TriangleAdj ::= 'triangleadj'
TriangleStream ::= 'TriangleStream'
Uniform ::= 'uniform'
Uint ::= 'uint' | 'unsigned int' | 'dword'
UintVec ::= Uint [1-4]
UintMat ::= UintVec 'x' [1-4]
Vector ::= 'vector'
Volatile ::= 'volatile'
Void ::= 'void'
While ::= 'while'

LeftParen ::= '('
RightParen ::= ')'
LeftBracket ::= '['
RightBracket ::= ']'
LeftBrace ::= '{'
RightBrace ::= '}'


LeftShift ::= '<<'
RightShift ::= '>>'
Plus ::= [+]
PlusPlus ::= '++'
Minus ::= '-'
MinusMinus ::= '--'
Star ::= '*'
Div ::= '/'
Mod ::= '%'


IncOperators ::=
    PlusPlus
    | MinusMinus

Operators ::=
    Plus
    | Minus
    | Star
    | Div
    | Mod
    | LeftShift
    | RightShift

And ::= '&'
Or ::= '|'
AndAnd ::= '&&'
OrOr ::= '||'
Caret ::= '^'
Not ::= '!'
Tilde ::= '~'

Equal ::= '=='
NotEqual ::= '!='

Less ::= '<'
LessEqual ::= '<='
Greater ::= '>'
GreaterEqual ::= '>='

Question ::= '?'
Colon ::= ':'
ColonColon ::= '::'
Semi ::= ''
Comma ::= ','

Assign ::= '='
StarAssign ::= '*='
DivAssign ::= '/='
ModAssign ::= '%='
PlusAssign ::= '+='
MinusAssign ::= '-='
LeftShiftAssign ::= '<<='
RightShiftAssign ::= '>>='
AndAssign ::= '&='
XorAssign ::= '^='
OrAssign ::= '|='

AssignOperators ::=
    Assign
    | StarAssign
    | DivAssign
    | ModAssign
    | PlusAssign
    | MinusAssign
    | LeftShiftAssign
    | RightShiftAssign
    | AndAssign
    | XorAssign
    | OrAssign



Dot ::= '.'

True ::= 'true'
False ::= 'false'

Identifier ::=  
    [a-zA-Z_] ([a-zA-Z_] | [0-1])*

Nondigit ::= [a-zA-Z_]

Digit1 ::= [1-9]
Digit ::=   '0' | Digit1

IntegerSuffix ::= [uUlL]

HexadecimalDigitSequence ::=   HexadecimalDigit+


DecimalIntegerLiteral ::= "0" | Digit1 Digit*

HexadecimalDigit ::= [0-9a-fA-F]
HexadecimalIntegerLiteral::= ('0x' | '0X') HexadecimalDigit+

IntegerLiteral ::=
	Sign?
	(
		(DecimalIntegerLiteral - HexadecimalIntegerLiteral) IntegerSuffix?
		| HexadecimalIntegerLiteral IntegerSuffix?
	)

FloatingSuffix ::= "f"

FractionalConstant ::=
    DecimalIntegerLiteral? '.' Digit*

ExponentPart ::=   
    'e' Sign? DecimalIntegerLiteral
    | 'E' Sign? DecimalIntegerLiteral

FloatLiteral ::=   
	Sign?
	(
		(DecimalIntegerLiteral - FractionalConstant) ExponentPart? FloatingSuffix?
		| FractionalConstant ExponentPart? FloatingSuffix?
	)


Sign ::=   '+' | '-'

EscapeSequence ::= SimpleEscapeSequence
   

SimpleEscapeSequence ::=   '\\' ['"?abfnrtv\\]
   
StringLiteral ::=   '"' SCharSequence? '"'
   

SCharSequence ::=   SChar+
   

SChar ::= 
    (SCharSequence - ["\\\r\n])
    |   EscapeSequence


literal ::=
	IntegerLiteral - FloatLiteral
	| FloatLiteral
	| StringLiteral

   
PreprocessorDirective ::=   '#' Whitespace? PreprocessorDirectiveName


PreprocessorDirectiveName ::=   
    'define'
	|   'elif'
	|   'else'
	|   'endif'
	|   'error'
	|   'if'
	|   'ifdef'
	|   'ifndef'
	|   'include'
	|   'line'
	|   'pragma'
	|   'undef'
    

LineComment ::=   '//'  (SCharSequence - [\r\n])

BlockComment ::= '/*' SCharSequence '*/'


BoolTypes ::=
    Bool - BoolVec
    | BoolVec - BoolMat
    | BoolMat

HalfTypes ::=
    Half - HalfVec
    | HalfVec - HalfMat
    | HalfMat

FloatTypes ::=
    Float - FloatVec
    | FloatVec - FloatMat
    | FloatMat

DoubleTypes ::=
    Double - DoubleVec
    | DoubleVec - DoubleMat
    | DoubleMat

IntTypes ::=
    Int - IntVec
    | IntVec - IntMat
    | IntMat

UintTypes ::=
    Uint - UintVec
    | UintVec - UintMat
    | UintMat

ValueTypes ::=
    BoolTypes
    | HalfTypes
    | FloatTypes
    | DoubleTypes
    | IntTypes
    | UintTypes

Keywords ::=
    AppendStructuredBuffer
	|   Buffer - ByteAddressBuffer
	|   ByteAddressBuffer - Break
	|   Break
	|   Case - CBuffer
	|   CBuffer - Centroid
	|   Centroid - Class
	|   Class - ColumnMajor
	|   ColumnMajor - Const
	|   Const - ConsumeStructuredBuffer
	|   ConsumeStructuredBuffer - Continue
	|   Continue
	|   Default - Discard
	|   Discard
	|   Do
	|   Else
	|   Extern
	|   For
	|   Groupshared
	|   If
	|   In
	|   Inout
	|   InputPatch
	|   Interface
	|   Line_
	|   LineAdj
	|   Linear
	|   LineStream
	|   Matrix
	|   Nointerpolation
	|   Noperspective
	|   Out
	|   OutputPatch
	|   Packoffset
	|   Point
	|   PointStream
	|   Precise
	|   Register
	|   Return
	|   RowMajor
	|   RWBuffer
	|   RWByteAddressBuffer
	|   RWStructuredBuffer
	|   Sample - Sampler
	|   Sampler
	|   SamplerComparisonState
	|   SamplerState
	|   Shared
	|   Static
	|   Struct
	|   StructuredBuffer
	|   Switch
    |   TextureTypes
	|   Triangle
	|   TriangleAdj
	|   TriangleStream
	|   Uniform
    |   ValueTypes
	|   Vector
	|   Volatile
	|   Void
	|   While