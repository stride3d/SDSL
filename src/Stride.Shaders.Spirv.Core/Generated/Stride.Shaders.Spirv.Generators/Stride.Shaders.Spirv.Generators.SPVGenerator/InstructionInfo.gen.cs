using static Stride.Shaders.Spirv.Specification;

namespace Stride.Shaders.Spirv.Core;
public partial class InstructionInfo
{
    static InstructionInfo()
    {
        Instance.Register(SDSLOp.OpSDSLShader, OperandKind.LiteralString, OperandQuantifier.One, "shaderName", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLShaderEnd, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpSDSLMixinInherit, OperandKind.IdRef, OperandQuantifier.One, "shader", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLCompose, OperandKind.LiteralString, OperandQuantifier.One, "mixin", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLCompose, OperandKind.LiteralString, OperandQuantifier.One, "name", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLStage, OperandKind.IdRef, OperandQuantifier.One, "stagedElement", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportShader, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportShader, OperandKind.LiteralString, OperandQuantifier.One, "shaderName", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportFunction, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportFunction, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportFunction, OperandKind.LiteralString, OperandQuantifier.One, "functionName", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportFunction, OperandKind.IdRef, OperandQuantifier.One, "shader", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportVariable, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportVariable, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportVariable, OperandKind.LiteralString, OperandQuantifier.One, "variableName", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLImportVariable, OperandKind.IdRef, OperandQuantifier.One, "shader", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLMixinVariable, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLMixinVariable, OperandKind.IdRef, OperandQuantifier.One, "mixinId", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLMixinVariable, OperandKind.IdRef, OperandQuantifier.One, "variableId", "Miscellaneous");
        Instance.Register(SDSLOp.OpSDSLVariable, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpSDSLVariable, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpSDSLVariable, OperandKind.StorageClass, OperandQuantifier.One, "storageclass", "Memory");
        Instance.Register(SDSLOp.OpSDSLVariable, OperandKind.LiteralString, OperandQuantifier.One, "name", "Memory");
        Instance.Register(SDSLOp.OpSDSLVariable, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "initializer", "Memory");
        Instance.Register(SDSLOp.OpSDSLFunctionParameter, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Function");
        Instance.Register(SDSLOp.OpSDSLFunctionParameter, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Function");
        Instance.Register(SDSLOp.OpSDSLFunctionParameter, OperandKind.LiteralString, OperandQuantifier.One, "name", "Function");
        Instance.Register(SDSLOp.OpSDSLIOVariable, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpSDSLIOVariable, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpSDSLIOVariable, OperandKind.StorageClass, OperandQuantifier.One, "storageclass", "Memory");
        Instance.Register(SDSLOp.OpSDSLIOVariable, OperandKind.ExecutionModel, OperandQuantifier.One, "executionmodel", "Memory");
        Instance.Register(SDSLOp.OpSDSLIOVariable, OperandKind.LiteralString, OperandQuantifier.One, "name", "Memory");
        Instance.Register(SDSLOp.OpSDSLIOVariable, OperandKind.LiteralString, OperandQuantifier.One, "semantic", "Memory");
        Instance.Register(SDSLOp.OpSDSLIOVariable, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "initializer", "Memory");
        Instance.Register(SDSLOp.OpSDSLFunction, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Function");
        Instance.Register(SDSLOp.OpSDSLFunction, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Function");
        Instance.Register(SDSLOp.OpSDSLFunction, OperandKind.FunctionControl, OperandQuantifier.One, "functioncontrol", "Function");
        Instance.Register(SDSLOp.OpSDSLFunction, OperandKind.IdRef, OperandQuantifier.One, "functionType", "Function");
        Instance.Register(SDSLOp.OpSDSLFunction, OperandKind.LiteralString, OperandQuantifier.One, "functionName", "Function");
        Instance.Register(SDSLOp.OpNop, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpUndef, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Miscellaneous");
        Instance.Register(SDSLOp.OpUndef, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpSourceContinued, OperandKind.LiteralString, OperandQuantifier.One, "continuedSource", "Debug");
        Instance.Register(SDSLOp.OpSource, OperandKind.SourceLanguage, OperandQuantifier.One, "sourcelanguage", "Debug");
        Instance.Register(SDSLOp.OpSource, OperandKind.LiteralInteger, OperandQuantifier.One, "version", "Debug");
        Instance.Register(SDSLOp.OpSource, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "file", "Debug");
        Instance.Register(SDSLOp.OpSource, OperandKind.LiteralString, OperandQuantifier.ZeroOrOne, "source", "Debug");
        Instance.Register(SDSLOp.OpSourceExtension, OperandKind.LiteralString, OperandQuantifier.One, "extension", "Debug");
        Instance.Register(SDSLOp.OpName, OperandKind.IdRef, OperandQuantifier.One, "target", "Debug");
        Instance.Register(SDSLOp.OpName, OperandKind.LiteralString, OperandQuantifier.One, "name", "Debug");
        Instance.Register(SDSLOp.OpMemberName, OperandKind.IdRef, OperandQuantifier.One, "type", "Debug");
        Instance.Register(SDSLOp.OpMemberName, OperandKind.LiteralInteger, OperandQuantifier.One, "member", "Debug");
        Instance.Register(SDSLOp.OpMemberName, OperandKind.LiteralString, OperandQuantifier.One, "name", "Debug");
        Instance.Register(SDSLOp.OpString, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Debug");
        Instance.Register(SDSLOp.OpString, OperandKind.LiteralString, OperandQuantifier.One, "value", "Debug");
        Instance.Register(SDSLOp.OpLine, OperandKind.IdRef, OperandQuantifier.One, "file", "Debug");
        Instance.Register(SDSLOp.OpLine, OperandKind.LiteralInteger, OperandQuantifier.One, "line", "Debug");
        Instance.Register(SDSLOp.OpLine, OperandKind.LiteralInteger, OperandQuantifier.One, "column", "Debug");
        Instance.Register(SDSLOp.OpExtension, OperandKind.LiteralString, OperandQuantifier.One, "name", "Extension");
        Instance.Register(SDSLOp.OpExtInstImport, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Extension");
        Instance.Register(SDSLOp.OpExtInstImport, OperandKind.LiteralString, OperandQuantifier.One, "name", "Extension");
        Instance.Register(SDSLOp.OpExtInst, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "GLSL");
        Instance.Register(SDSLOp.OpExtInst, OperandKind.IdResult, OperandQuantifier.One, "resultId", "GLSL");
        Instance.Register(SDSLOp.OpExtInst, OperandKind.IdRef, OperandQuantifier.One, "set", "GLSL");
        Instance.Register(SDSLOp.OpExtInst, OperandKind.LiteralInteger, OperandQuantifier.One, "instruction", "GLSL");
        Instance.Register(SDSLOp.OpExtInst, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "GLSL");
        Instance.Register(SDSLOp.OpMemoryModel, OperandKind.AddressingModel, OperandQuantifier.One, "addressingmodel", "Mode-Setting");
        Instance.Register(SDSLOp.OpMemoryModel, OperandKind.MemoryModel, OperandQuantifier.One, "memorymodel", "Mode-Setting");
        Instance.Register(SDSLOp.OpEntryPoint, OperandKind.ExecutionModel, OperandQuantifier.One, "executionmodel", "Mode-Setting");
        Instance.Register(SDSLOp.OpEntryPoint, OperandKind.IdRef, OperandQuantifier.One, "entryPoint", "Mode-Setting");
        Instance.Register(SDSLOp.OpEntryPoint, OperandKind.LiteralString, OperandQuantifier.One, "name", "Mode-Setting");
        Instance.Register(SDSLOp.OpEntryPoint, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Mode-Setting");
        Instance.Register(SDSLOp.OpExecutionMode, OperandKind.IdRef, OperandQuantifier.One, "entryPoint", "Mode-Setting");
        Instance.Register(SDSLOp.OpExecutionMode, OperandKind.ExecutionMode, OperandQuantifier.One, "mode", "Mode-Setting");
        Instance.Register(SDSLOp.OpCapability, OperandKind.Capability, OperandQuantifier.One, "capability", "Mode-Setting");
        Instance.Register(SDSLOp.OpTypeVoid, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeBool, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeInt, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeInt, OperandKind.LiteralInteger, OperandQuantifier.One, "width", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeInt, OperandKind.LiteralInteger, OperandQuantifier.One, "signedness", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeFloat, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeFloat, OperandKind.LiteralInteger, OperandQuantifier.One, "width", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeFloat, OperandKind.FPEncoding, OperandQuantifier.ZeroOrOne, "floatingpointencoding", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeVector, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeVector, OperandKind.IdRef, OperandQuantifier.One, "componentType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeVector, OperandKind.LiteralInteger, OperandQuantifier.One, "componentCount", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeMatrix, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeMatrix, OperandKind.IdRef, OperandQuantifier.One, "columnType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeMatrix, OperandKind.LiteralInteger, OperandQuantifier.One, "columnCount", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.IdRef, OperandQuantifier.One, "sampledType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.Dim, OperandQuantifier.One, "dim", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.LiteralInteger, OperandQuantifier.One, "depth", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.LiteralInteger, OperandQuantifier.One, "arrayed", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.LiteralInteger, OperandQuantifier.One, "mS", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.LiteralInteger, OperandQuantifier.One, "sampled", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.ImageFormat, OperandQuantifier.One, "imageformat", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeImage, OperandKind.AccessQualifier, OperandQuantifier.ZeroOrOne, "accessqualifier", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeSampler, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeSampledImage, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeSampledImage, OperandKind.IdRef, OperandQuantifier.One, "imageType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeArray, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeArray, OperandKind.IdRef, OperandQuantifier.One, "elementType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeArray, OperandKind.IdRef, OperandQuantifier.One, "length", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeRuntimeArray, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeRuntimeArray, OperandKind.IdRef, OperandQuantifier.One, "elementType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeStruct, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeStruct, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeOpaque, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeOpaque, OperandKind.LiteralString, OperandQuantifier.One, "thenameoftheopaquetype", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypePointer, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypePointer, OperandKind.StorageClass, OperandQuantifier.One, "storageclass", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypePointer, OperandKind.IdRef, OperandQuantifier.One, "type", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeFunction, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeFunction, OperandKind.IdRef, OperandQuantifier.One, "returnType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeFunction, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeEvent, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeDeviceEvent, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeReserveId, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeQueue, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypePipe, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypePipe, OperandKind.AccessQualifier, OperandQuantifier.One, "qualifier", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeForwardPointer, OperandKind.IdRef, OperandQuantifier.One, "pointerType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeForwardPointer, OperandKind.StorageClass, OperandQuantifier.One, "storageclass", "Type-Declaration");
        Instance.Register(SDSLOp.OpConstantTrue, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantTrue, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantFalse, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantFalse, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstant, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstant, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstant, OperandKind.LiteralContextDependentNumber, OperandQuantifier.One, "value", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantComposite, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantComposite, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantComposite, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantSampler, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantSampler, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantSampler, OperandKind.SamplerAddressingMode, OperandQuantifier.One, "sampleraddressingmode", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantSampler, OperandKind.LiteralInteger, OperandQuantifier.One, "param", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantSampler, OperandKind.SamplerFilterMode, OperandQuantifier.One, "samplerfiltermode", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantNull, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantNull, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantTrue, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantTrue, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantFalse, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantFalse, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstant, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstant, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstant, OperandKind.LiteralContextDependentNumber, OperandQuantifier.One, "value", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantComposite, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantComposite, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantComposite, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantOp, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantOp, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantOp, OperandKind.LiteralSpecConstantOpInteger, OperandQuantifier.One, "opcode", "Constant-Creation");
        Instance.Register(SDSLOp.OpFunction, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Function");
        Instance.Register(SDSLOp.OpFunction, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Function");
        Instance.Register(SDSLOp.OpFunction, OperandKind.FunctionControl, OperandQuantifier.One, "functioncontrol", "Function");
        Instance.Register(SDSLOp.OpFunction, OperandKind.IdRef, OperandQuantifier.One, "functionType", "Function");
        Instance.Register(SDSLOp.OpFunctionParameter, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Function");
        Instance.Register(SDSLOp.OpFunctionParameter, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Function");
        Instance.Register(SDSLOp.OpFunctionEnd, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpFunctionCall, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Function");
        Instance.Register(SDSLOp.OpFunctionCall, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Function");
        Instance.Register(SDSLOp.OpFunctionCall, OperandKind.IdRef, OperandQuantifier.One, "function", "Function");
        Instance.Register(SDSLOp.OpFunctionCall, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Function");
        Instance.Register(SDSLOp.OpVariable, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpVariable, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpVariable, OperandKind.StorageClass, OperandQuantifier.One, "storageclass", "Memory");
        Instance.Register(SDSLOp.OpVariable, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "initializer", "Memory");
        Instance.Register(SDSLOp.OpImageTexelPointer, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpImageTexelPointer, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpImageTexelPointer, OperandKind.IdRef, OperandQuantifier.One, "image", "Memory");
        Instance.Register(SDSLOp.OpImageTexelPointer, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Memory");
        Instance.Register(SDSLOp.OpImageTexelPointer, OperandKind.IdRef, OperandQuantifier.One, "sample", "Memory");
        Instance.Register(SDSLOp.OpLoad, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpLoad, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpLoad, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Memory");
        Instance.Register(SDSLOp.OpLoad, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess", "Memory");
        Instance.Register(SDSLOp.OpStore, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Memory");
        Instance.Register(SDSLOp.OpStore, OperandKind.IdRef, OperandQuantifier.One, "objectId", "Memory");
        Instance.Register(SDSLOp.OpStore, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess", "Memory");
        Instance.Register(SDSLOp.OpCopyMemory, OperandKind.IdRef, OperandQuantifier.One, "target", "Memory");
        Instance.Register(SDSLOp.OpCopyMemory, OperandKind.IdRef, OperandQuantifier.One, "source", "Memory");
        Instance.Register(SDSLOp.OpCopyMemory, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess", "Memory");
        Instance.Register(SDSLOp.OpCopyMemory, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess1", "Memory");
        Instance.Register(SDSLOp.OpCopyMemorySized, OperandKind.IdRef, OperandQuantifier.One, "target", "Memory");
        Instance.Register(SDSLOp.OpCopyMemorySized, OperandKind.IdRef, OperandQuantifier.One, "source", "Memory");
        Instance.Register(SDSLOp.OpCopyMemorySized, OperandKind.IdRef, OperandQuantifier.One, "size", "Memory");
        Instance.Register(SDSLOp.OpCopyMemorySized, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess", "Memory");
        Instance.Register(SDSLOp.OpCopyMemorySized, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess1", "Memory");
        Instance.Register(SDSLOp.OpAccessChain, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpAccessChain, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpAccessChain, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpAccessChain, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Memory");
        Instance.Register(SDSLOp.OpInBoundsAccessChain, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpInBoundsAccessChain, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpInBoundsAccessChain, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpInBoundsAccessChain, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Memory");
        Instance.Register(SDSLOp.OpPtrAccessChain, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpPtrAccessChain, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpPtrAccessChain, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpPtrAccessChain, OperandKind.IdRef, OperandQuantifier.One, "element", "Memory");
        Instance.Register(SDSLOp.OpPtrAccessChain, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Memory");
        Instance.Register(SDSLOp.OpArrayLength, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpArrayLength, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpArrayLength, OperandKind.IdRef, OperandQuantifier.One, "structure", "Memory");
        Instance.Register(SDSLOp.OpArrayLength, OperandKind.LiteralInteger, OperandQuantifier.One, "arraymember", "Memory");
        Instance.Register(SDSLOp.OpGenericPtrMemSemantics, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpGenericPtrMemSemantics, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpGenericPtrMemSemantics, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Memory");
        Instance.Register(SDSLOp.OpInBoundsPtrAccessChain, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpInBoundsPtrAccessChain, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpInBoundsPtrAccessChain, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpInBoundsPtrAccessChain, OperandKind.IdRef, OperandQuantifier.One, "element", "Memory");
        Instance.Register(SDSLOp.OpInBoundsPtrAccessChain, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Memory");
        Instance.Register(SDSLOp.OpDecorate, OperandKind.IdRef, OperandQuantifier.One, "target", "Annotation");
        Instance.Register(SDSLOp.OpDecorate, OperandKind.Decoration, OperandQuantifier.One, "decoration", "Annotation");
        Instance.Register(SDSLOp.OpMemberDecorate, OperandKind.IdRef, OperandQuantifier.One, "structureType", "Annotation");
        Instance.Register(SDSLOp.OpMemberDecorate, OperandKind.LiteralInteger, OperandQuantifier.One, "member", "Annotation");
        Instance.Register(SDSLOp.OpMemberDecorate, OperandKind.Decoration, OperandQuantifier.One, "decoration", "Annotation");
        Instance.Register(SDSLOp.OpDecorationGroup, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Annotation");
        Instance.Register(SDSLOp.OpGroupDecorate, OperandKind.IdRef, OperandQuantifier.One, "decorationGroup", "Annotation");
        Instance.Register(SDSLOp.OpGroupDecorate, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Annotation");
        Instance.Register(SDSLOp.OpGroupMemberDecorate, OperandKind.IdRef, OperandQuantifier.One, "decorationGroup", "Annotation");
        Instance.Register(SDSLOp.OpGroupMemberDecorate, OperandKind.PairIdRefLiteralInteger, OperandQuantifier.ZeroOrMore, "values", "Annotation");
        Instance.Register(SDSLOp.OpVectorExtractDynamic, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpVectorExtractDynamic, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpVectorExtractDynamic, OperandKind.IdRef, OperandQuantifier.One, "vector", "Composite");
        Instance.Register(SDSLOp.OpVectorExtractDynamic, OperandKind.IdRef, OperandQuantifier.One, "index", "Composite");
        Instance.Register(SDSLOp.OpVectorInsertDynamic, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpVectorInsertDynamic, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpVectorInsertDynamic, OperandKind.IdRef, OperandQuantifier.One, "vector", "Composite");
        Instance.Register(SDSLOp.OpVectorInsertDynamic, OperandKind.IdRef, OperandQuantifier.One, "component", "Composite");
        Instance.Register(SDSLOp.OpVectorInsertDynamic, OperandKind.IdRef, OperandQuantifier.One, "index", "Composite");
        Instance.Register(SDSLOp.OpVectorShuffle, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpVectorShuffle, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpVectorShuffle, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Composite");
        Instance.Register(SDSLOp.OpVectorShuffle, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Composite");
        Instance.Register(SDSLOp.OpVectorShuffle, OperandKind.LiteralInteger, OperandQuantifier.ZeroOrMore, "values", "Composite");
        Instance.Register(SDSLOp.OpCompositeConstruct, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpCompositeConstruct, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpCompositeConstruct, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Composite");
        Instance.Register(SDSLOp.OpCompositeExtract, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpCompositeExtract, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpCompositeExtract, OperandKind.IdRef, OperandQuantifier.One, "composite", "Composite");
        Instance.Register(SDSLOp.OpCompositeExtract, OperandKind.LiteralInteger, OperandQuantifier.ZeroOrMore, "values", "Composite");
        Instance.Register(SDSLOp.OpCompositeInsert, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpCompositeInsert, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpCompositeInsert, OperandKind.IdRef, OperandQuantifier.One, "objectId", "Composite");
        Instance.Register(SDSLOp.OpCompositeInsert, OperandKind.IdRef, OperandQuantifier.One, "composite", "Composite");
        Instance.Register(SDSLOp.OpCompositeInsert, OperandKind.LiteralInteger, OperandQuantifier.ZeroOrMore, "values", "Composite");
        Instance.Register(SDSLOp.OpCopyObject, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpCopyObject, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpCopyObject, OperandKind.IdRef, OperandQuantifier.One, "operand", "Composite");
        Instance.Register(SDSLOp.OpTranspose, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpTranspose, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpTranspose, OperandKind.IdRef, OperandQuantifier.One, "matrix", "Composite");
        Instance.Register(SDSLOp.OpSampledImage, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpSampledImage, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpSampledImage, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpSampledImage, OperandKind.IdRef, OperandQuantifier.One, "sampler", "Image");
        Instance.Register(SDSLOp.OpImageSampleImplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleImplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleImplicitLod, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSampleExplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleExplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleExplicitLod, OperandKind.ImageOperands, OperandQuantifier.One, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefImplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefImplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefImplicitLod, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefExplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefExplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSampleDrefExplicitLod, OperandKind.ImageOperands, OperandQuantifier.One, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjImplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjImplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjImplicitLod, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjExplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjExplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjExplicitLod, OperandKind.ImageOperands, OperandQuantifier.One, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefImplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefImplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefImplicitLod, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefExplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefExplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSampleProjDrefExplicitLod, OperandKind.ImageOperands, OperandQuantifier.One, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageFetch, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageFetch, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageFetch, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageFetch, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageFetch, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageGather, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageGather, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageGather, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageGather, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageGather, OperandKind.IdRef, OperandQuantifier.One, "component", "Image");
        Instance.Register(SDSLOp.OpImageGather, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageDrefGather, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageDrefGather, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageDrefGather, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageDrefGather, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageDrefGather, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageDrefGather, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageRead, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageRead, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageRead, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageRead, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageRead, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageWrite, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageWrite, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageWrite, OperandKind.IdRef, OperandQuantifier.One, "texel", "Image");
        Instance.Register(SDSLOp.OpImageWrite, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImage, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImage, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImage, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageQueryFormat, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageQueryFormat, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageQueryFormat, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageQueryOrder, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageQueryOrder, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageQueryOrder, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageQuerySizeLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageQuerySizeLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageQuerySizeLod, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageQuerySizeLod, OperandKind.IdRef, OperandQuantifier.One, "levelofDetail", "Image");
        Instance.Register(SDSLOp.OpImageQuerySize, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageQuerySize, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageQuerySize, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageQueryLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageQueryLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageQueryLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageQueryLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageQueryLevels, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageQueryLevels, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageQueryLevels, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageQuerySamples, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageQuerySamples, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageQuerySamples, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpConvertFToU, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpConvertFToU, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpConvertFToU, OperandKind.IdRef, OperandQuantifier.One, "floatValue", "Conversion");
        Instance.Register(SDSLOp.OpConvertFToS, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpConvertFToS, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpConvertFToS, OperandKind.IdRef, OperandQuantifier.One, "floatValue", "Conversion");
        Instance.Register(SDSLOp.OpConvertSToF, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpConvertSToF, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpConvertSToF, OperandKind.IdRef, OperandQuantifier.One, "signedValue", "Conversion");
        Instance.Register(SDSLOp.OpConvertUToF, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpConvertUToF, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpConvertUToF, OperandKind.IdRef, OperandQuantifier.One, "unsignedValue", "Conversion");
        Instance.Register(SDSLOp.OpUConvert, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpUConvert, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpUConvert, OperandKind.IdRef, OperandQuantifier.One, "unsignedValue", "Conversion");
        Instance.Register(SDSLOp.OpSConvert, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpSConvert, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpSConvert, OperandKind.IdRef, OperandQuantifier.One, "signedValue", "Conversion");
        Instance.Register(SDSLOp.OpFConvert, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpFConvert, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpFConvert, OperandKind.IdRef, OperandQuantifier.One, "floatValue", "Conversion");
        Instance.Register(SDSLOp.OpQuantizeToF16, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpQuantizeToF16, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpQuantizeToF16, OperandKind.IdRef, OperandQuantifier.One, "value", "Conversion");
        Instance.Register(SDSLOp.OpConvertPtrToU, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpConvertPtrToU, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpConvertPtrToU, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Conversion");
        Instance.Register(SDSLOp.OpSatConvertSToU, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpSatConvertSToU, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpSatConvertSToU, OperandKind.IdRef, OperandQuantifier.One, "signedValue", "Conversion");
        Instance.Register(SDSLOp.OpSatConvertUToS, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpSatConvertUToS, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpSatConvertUToS, OperandKind.IdRef, OperandQuantifier.One, "unsignedValue", "Conversion");
        Instance.Register(SDSLOp.OpConvertUToPtr, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpConvertUToPtr, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpConvertUToPtr, OperandKind.IdRef, OperandQuantifier.One, "integerValue", "Conversion");
        Instance.Register(SDSLOp.OpPtrCastToGeneric, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpPtrCastToGeneric, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpPtrCastToGeneric, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Conversion");
        Instance.Register(SDSLOp.OpGenericCastToPtr, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpGenericCastToPtr, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpGenericCastToPtr, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Conversion");
        Instance.Register(SDSLOp.OpGenericCastToPtrExplicit, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpGenericCastToPtrExplicit, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpGenericCastToPtrExplicit, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Conversion");
        Instance.Register(SDSLOp.OpGenericCastToPtrExplicit, OperandKind.StorageClass, OperandQuantifier.One, "storage", "Conversion");
        Instance.Register(SDSLOp.OpBitcast, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpBitcast, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpBitcast, OperandKind.IdRef, OperandQuantifier.One, "operand", "Conversion");
        Instance.Register(SDSLOp.OpSNegate, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSNegate, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSNegate, OperandKind.IdRef, OperandQuantifier.One, "operand", "Arithmetic");
        Instance.Register(SDSLOp.OpFNegate, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpFNegate, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpFNegate, OperandKind.IdRef, OperandQuantifier.One, "operand", "Arithmetic");
        Instance.Register(SDSLOp.OpIAdd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpIAdd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpIAdd, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpIAdd, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpFAdd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpFAdd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpFAdd, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpFAdd, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpISub, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpISub, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpISub, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpISub, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpFSub, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpFSub, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpFSub, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpFSub, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpIMul, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpIMul, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpIMul, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpIMul, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpFMul, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpFMul, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpFMul, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpFMul, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpUDiv, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpUDiv, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpUDiv, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpUDiv, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpSDiv, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSDiv, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSDiv, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpSDiv, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpFDiv, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpFDiv, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpFDiv, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpFDiv, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpUMod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpUMod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpUMod, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpUMod, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpSRem, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSRem, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSRem, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpSRem, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpSMod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSMod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSMod, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpSMod, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpFRem, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpFRem, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpFRem, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpFRem, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpFMod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpFMod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpFMod, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpFMod, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpVectorTimesScalar, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpVectorTimesScalar, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpVectorTimesScalar, OperandKind.IdRef, OperandQuantifier.One, "vector", "Arithmetic");
        Instance.Register(SDSLOp.OpVectorTimesScalar, OperandKind.IdRef, OperandQuantifier.One, "scalar", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesScalar, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesScalar, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesScalar, OperandKind.IdRef, OperandQuantifier.One, "matrix", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesScalar, OperandKind.IdRef, OperandQuantifier.One, "scalar", "Arithmetic");
        Instance.Register(SDSLOp.OpVectorTimesMatrix, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpVectorTimesMatrix, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpVectorTimesMatrix, OperandKind.IdRef, OperandQuantifier.One, "vector", "Arithmetic");
        Instance.Register(SDSLOp.OpVectorTimesMatrix, OperandKind.IdRef, OperandQuantifier.One, "matrix", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesVector, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesVector, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesVector, OperandKind.IdRef, OperandQuantifier.One, "matrix", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesVector, OperandKind.IdRef, OperandQuantifier.One, "vector", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesMatrix, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesMatrix, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesMatrix, OperandKind.IdRef, OperandQuantifier.One, "leftMatrix", "Arithmetic");
        Instance.Register(SDSLOp.OpMatrixTimesMatrix, OperandKind.IdRef, OperandQuantifier.One, "rightMatrix", "Arithmetic");
        Instance.Register(SDSLOp.OpOuterProduct, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpOuterProduct, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpOuterProduct, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Arithmetic");
        Instance.Register(SDSLOp.OpOuterProduct, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Arithmetic");
        Instance.Register(SDSLOp.OpDot, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpDot, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpDot, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Arithmetic");
        Instance.Register(SDSLOp.OpDot, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Arithmetic");
        Instance.Register(SDSLOp.OpIAddCarry, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpIAddCarry, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpIAddCarry, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpIAddCarry, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpISubBorrow, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpISubBorrow, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpISubBorrow, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpISubBorrow, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpUMulExtended, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpUMulExtended, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpUMulExtended, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpUMulExtended, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpSMulExtended, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSMulExtended, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSMulExtended, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Arithmetic");
        Instance.Register(SDSLOp.OpSMulExtended, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Arithmetic");
        Instance.Register(SDSLOp.OpAny, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpAny, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpAny, OperandKind.IdRef, OperandQuantifier.One, "vector", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpAll, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpAll, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpAll, OperandKind.IdRef, OperandQuantifier.One, "vector", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsNan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsNan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsNan, OperandKind.IdRef, OperandQuantifier.One, "x", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsInf, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsInf, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsInf, OperandKind.IdRef, OperandQuantifier.One, "x", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsFinite, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsFinite, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsFinite, OperandKind.IdRef, OperandQuantifier.One, "x", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsNormal, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsNormal, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIsNormal, OperandKind.IdRef, OperandQuantifier.One, "x", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSignBitSet, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSignBitSet, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSignBitSet, OperandKind.IdRef, OperandQuantifier.One, "x", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLessOrGreater, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLessOrGreater, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLessOrGreater, OperandKind.IdRef, OperandQuantifier.One, "x", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLessOrGreater, OperandKind.IdRef, OperandQuantifier.One, "y", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpOrdered, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpOrdered, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpOrdered, OperandKind.IdRef, OperandQuantifier.One, "x", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpOrdered, OperandKind.IdRef, OperandQuantifier.One, "y", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUnordered, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUnordered, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUnordered, OperandKind.IdRef, OperandQuantifier.One, "x", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUnordered, OperandKind.IdRef, OperandQuantifier.One, "y", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalNotEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalNotEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalNotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalNotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalOr, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalOr, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalOr, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalOr, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalAnd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalAnd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalAnd, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalAnd, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalNot, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalNot, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpLogicalNot, OperandKind.IdRef, OperandQuantifier.One, "operand", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSelect, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSelect, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSelect, OperandKind.IdRef, OperandQuantifier.One, "condition", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSelect, OperandKind.IdRef, OperandQuantifier.One, "object1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSelect, OperandKind.IdRef, OperandQuantifier.One, "object2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpIEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpINotEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpINotEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpINotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpINotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUGreaterThan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUGreaterThan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUGreaterThan, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUGreaterThan, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSGreaterThan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSGreaterThan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSGreaterThan, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSGreaterThan, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUGreaterThanEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUGreaterThanEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUGreaterThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpUGreaterThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSGreaterThanEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSGreaterThanEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSGreaterThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSGreaterThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpULessThan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpULessThan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpULessThan, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpULessThan, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSLessThan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSLessThan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSLessThan, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSLessThan, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpULessThanEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpULessThanEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpULessThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpULessThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSLessThanEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSLessThanEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSLessThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpSLessThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdNotEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdNotEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdNotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdNotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordNotEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordNotEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordNotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordNotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdLessThan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdLessThan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdLessThan, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdLessThan, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordLessThan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordLessThan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordLessThan, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordLessThan, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdGreaterThan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdGreaterThan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdGreaterThan, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdGreaterThan, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordGreaterThan, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordGreaterThan, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordGreaterThan, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordGreaterThan, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdLessThanEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdLessThanEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdLessThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdLessThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordLessThanEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordLessThanEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordLessThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordLessThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdGreaterThanEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdGreaterThanEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdGreaterThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFOrdGreaterThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordGreaterThanEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordGreaterThanEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordGreaterThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpFUnordGreaterThanEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Relational_and_Logical");
        Instance.Register(SDSLOp.OpShiftRightLogical, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpShiftRightLogical, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpShiftRightLogical, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Bit");
        Instance.Register(SDSLOp.OpShiftRightLogical, OperandKind.IdRef, OperandQuantifier.One, "shift", "Bit");
        Instance.Register(SDSLOp.OpShiftRightArithmetic, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpShiftRightArithmetic, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpShiftRightArithmetic, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Bit");
        Instance.Register(SDSLOp.OpShiftRightArithmetic, OperandKind.IdRef, OperandQuantifier.One, "shift", "Bit");
        Instance.Register(SDSLOp.OpShiftLeftLogical, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpShiftLeftLogical, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpShiftLeftLogical, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Bit");
        Instance.Register(SDSLOp.OpShiftLeftLogical, OperandKind.IdRef, OperandQuantifier.One, "shift", "Bit");
        Instance.Register(SDSLOp.OpBitwiseOr, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpBitwiseOr, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpBitwiseOr, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Bit");
        Instance.Register(SDSLOp.OpBitwiseOr, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Bit");
        Instance.Register(SDSLOp.OpBitwiseXor, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpBitwiseXor, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpBitwiseXor, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Bit");
        Instance.Register(SDSLOp.OpBitwiseXor, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Bit");
        Instance.Register(SDSLOp.OpBitwiseAnd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpBitwiseAnd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpBitwiseAnd, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Bit");
        Instance.Register(SDSLOp.OpBitwiseAnd, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Bit");
        Instance.Register(SDSLOp.OpNot, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpNot, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpNot, OperandKind.IdRef, OperandQuantifier.One, "operand", "Bit");
        Instance.Register(SDSLOp.OpBitFieldInsert, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpBitFieldInsert, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpBitFieldInsert, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Bit");
        Instance.Register(SDSLOp.OpBitFieldInsert, OperandKind.IdRef, OperandQuantifier.One, "insert", "Bit");
        Instance.Register(SDSLOp.OpBitFieldInsert, OperandKind.IdRef, OperandQuantifier.One, "offset", "Bit");
        Instance.Register(SDSLOp.OpBitFieldInsert, OperandKind.IdRef, OperandQuantifier.One, "count", "Bit");
        Instance.Register(SDSLOp.OpBitFieldSExtract, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpBitFieldSExtract, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpBitFieldSExtract, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Bit");
        Instance.Register(SDSLOp.OpBitFieldSExtract, OperandKind.IdRef, OperandQuantifier.One, "offset", "Bit");
        Instance.Register(SDSLOp.OpBitFieldSExtract, OperandKind.IdRef, OperandQuantifier.One, "count", "Bit");
        Instance.Register(SDSLOp.OpBitFieldUExtract, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpBitFieldUExtract, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpBitFieldUExtract, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Bit");
        Instance.Register(SDSLOp.OpBitFieldUExtract, OperandKind.IdRef, OperandQuantifier.One, "offset", "Bit");
        Instance.Register(SDSLOp.OpBitFieldUExtract, OperandKind.IdRef, OperandQuantifier.One, "count", "Bit");
        Instance.Register(SDSLOp.OpBitReverse, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpBitReverse, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpBitReverse, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Bit");
        Instance.Register(SDSLOp.OpBitCount, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Bit");
        Instance.Register(SDSLOp.OpBitCount, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Bit");
        Instance.Register(SDSLOp.OpBitCount, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Bit");
        Instance.Register(SDSLOp.OpDPdx, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpDPdx, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpDPdx, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpDPdy, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpDPdy, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpDPdy, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpFwidth, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpFwidth, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpFwidth, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpDPdxFine, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpDPdxFine, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpDPdxFine, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpDPdyFine, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpDPdyFine, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpDPdyFine, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpFwidthFine, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpFwidthFine, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpFwidthFine, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpDPdxCoarse, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpDPdxCoarse, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpDPdxCoarse, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpDPdyCoarse, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpDPdyCoarse, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpDPdyCoarse, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpFwidthCoarse, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Derivative");
        Instance.Register(SDSLOp.OpFwidthCoarse, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Derivative");
        Instance.Register(SDSLOp.OpFwidthCoarse, OperandKind.IdRef, OperandQuantifier.One, "p", "Derivative");
        Instance.Register(SDSLOp.OpEmitVertex, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpEndPrimitive, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpEmitStreamVertex, OperandKind.IdRef, OperandQuantifier.One, "stream", "Primitive");
        Instance.Register(SDSLOp.OpEndStreamPrimitive, OperandKind.IdRef, OperandQuantifier.One, "stream", "Primitive");
        Instance.Register(SDSLOp.OpControlBarrier, OperandKind.IdScope, OperandQuantifier.One, "execution", "Barrier");
        Instance.Register(SDSLOp.OpControlBarrier, OperandKind.IdScope, OperandQuantifier.One, "memory", "Barrier");
        Instance.Register(SDSLOp.OpControlBarrier, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Barrier");
        Instance.Register(SDSLOp.OpMemoryBarrier, OperandKind.IdScope, OperandQuantifier.One, "memory", "Barrier");
        Instance.Register(SDSLOp.OpMemoryBarrier, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Barrier");
        Instance.Register(SDSLOp.OpAtomicLoad, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicLoad, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicLoad, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicLoad, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicLoad, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicStore, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicStore, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicStore, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicStore, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicExchange, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicExchange, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicExchange, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicExchange, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicExchange, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicExchange, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchange, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchange, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchange, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchange, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchange, OperandKind.IdMemorySemantics, OperandQuantifier.One, "equal", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchange, OperandKind.IdMemorySemantics, OperandQuantifier.One, "unequal", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchange, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchange, OperandKind.IdRef, OperandQuantifier.One, "comparator", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchangeWeak, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchangeWeak, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchangeWeak, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchangeWeak, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchangeWeak, OperandKind.IdMemorySemantics, OperandQuantifier.One, "equal", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchangeWeak, OperandKind.IdMemorySemantics, OperandQuantifier.One, "unequal", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchangeWeak, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicCompareExchangeWeak, OperandKind.IdRef, OperandQuantifier.One, "comparator", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIIncrement, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIIncrement, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIIncrement, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIIncrement, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIIncrement, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIDecrement, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIDecrement, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIDecrement, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIDecrement, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIDecrement, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIAdd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIAdd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIAdd, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIAdd, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIAdd, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicIAdd, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicISub, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicISub, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicISub, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicISub, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicISub, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicISub, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMin, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMin, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMin, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMin, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMin, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMin, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMin, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMin, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMin, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMin, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMin, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMin, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMax, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMax, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMax, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMax, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMax, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicSMax, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMax, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMax, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMax, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMax, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMax, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicUMax, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicAnd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicAnd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicAnd, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicAnd, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicAnd, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicAnd, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicOr, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicOr, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicOr, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicOr, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicOr, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicOr, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicXor, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicXor, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicXor, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicXor, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicXor, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicXor, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpPhi, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Control-Flow");
        Instance.Register(SDSLOp.OpPhi, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Control-Flow");
        Instance.Register(SDSLOp.OpPhi, OperandKind.PairIdRefIdRef, OperandQuantifier.ZeroOrMore, "values", "Control-Flow");
        Instance.Register(SDSLOp.OpLoopMerge, OperandKind.IdRef, OperandQuantifier.One, "mergeBlock", "Control-Flow");
        Instance.Register(SDSLOp.OpLoopMerge, OperandKind.IdRef, OperandQuantifier.One, "continueTarget", "Control-Flow");
        Instance.Register(SDSLOp.OpLoopMerge, OperandKind.LoopControl, OperandQuantifier.One, "loopcontrol", "Control-Flow");
        Instance.Register(SDSLOp.OpSelectionMerge, OperandKind.IdRef, OperandQuantifier.One, "mergeBlock", "Control-Flow");
        Instance.Register(SDSLOp.OpSelectionMerge, OperandKind.SelectionControl, OperandQuantifier.One, "selectioncontrol", "Control-Flow");
        Instance.Register(SDSLOp.OpLabel, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Control-Flow");
        Instance.Register(SDSLOp.OpBranch, OperandKind.IdRef, OperandQuantifier.One, "targetLabel", "Control-Flow");
        Instance.Register(SDSLOp.OpBranchConditional, OperandKind.IdRef, OperandQuantifier.One, "condition", "Control-Flow");
        Instance.Register(SDSLOp.OpBranchConditional, OperandKind.IdRef, OperandQuantifier.One, "trueLabel", "Control-Flow");
        Instance.Register(SDSLOp.OpBranchConditional, OperandKind.IdRef, OperandQuantifier.One, "falseLabel", "Control-Flow");
        Instance.Register(SDSLOp.OpBranchConditional, OperandKind.LiteralInteger, OperandQuantifier.ZeroOrMore, "values", "Control-Flow");
        Instance.Register(SDSLOp.OpSwitch, OperandKind.IdRef, OperandQuantifier.One, "selector", "Control-Flow");
        Instance.Register(SDSLOp.OpSwitch, OperandKind.IdRef, OperandQuantifier.One, "defaultId", "Control-Flow");
        Instance.Register(SDSLOp.OpSwitch, OperandKind.PairLiteralIntegerIdRef, OperandQuantifier.ZeroOrMore, "values", "Control-Flow");
        Instance.Register(SDSLOp.OpKill, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpReturn, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpReturnValue, OperandKind.IdRef, OperandQuantifier.One, "value", "Control-Flow");
        Instance.Register(SDSLOp.OpUnreachable, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpLifetimeStart, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Control-Flow");
        Instance.Register(SDSLOp.OpLifetimeStart, OperandKind.LiteralInteger, OperandQuantifier.One, "size", "Control-Flow");
        Instance.Register(SDSLOp.OpLifetimeStop, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Control-Flow");
        Instance.Register(SDSLOp.OpLifetimeStop, OperandKind.LiteralInteger, OperandQuantifier.One, "size", "Control-Flow");
        Instance.Register(SDSLOp.OpGroupAsyncCopy, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupAsyncCopy, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupAsyncCopy, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupAsyncCopy, OperandKind.IdRef, OperandQuantifier.One, "destination", "Group");
        Instance.Register(SDSLOp.OpGroupAsyncCopy, OperandKind.IdRef, OperandQuantifier.One, "source", "Group");
        Instance.Register(SDSLOp.OpGroupAsyncCopy, OperandKind.IdRef, OperandQuantifier.One, "numElements", "Group");
        Instance.Register(SDSLOp.OpGroupAsyncCopy, OperandKind.IdRef, OperandQuantifier.One, "stride", "Group");
        Instance.Register(SDSLOp.OpGroupAsyncCopy, OperandKind.IdRef, OperandQuantifier.One, "eventId", "Group");
        Instance.Register(SDSLOp.OpGroupWaitEvents, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupWaitEvents, OperandKind.IdRef, OperandQuantifier.One, "numEvents", "Group");
        Instance.Register(SDSLOp.OpGroupWaitEvents, OperandKind.IdRef, OperandQuantifier.One, "eventsList", "Group");
        Instance.Register(SDSLOp.OpGroupAll, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupAll, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupAll, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupAll, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Group");
        Instance.Register(SDSLOp.OpGroupAny, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupAny, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupAny, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupAny, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Group");
        Instance.Register(SDSLOp.OpGroupBroadcast, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupBroadcast, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupBroadcast, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupBroadcast, OperandKind.IdRef, OperandQuantifier.One, "value", "Group");
        Instance.Register(SDSLOp.OpGroupBroadcast, OperandKind.IdRef, OperandQuantifier.One, "localId", "Group");
        Instance.Register(SDSLOp.OpGroupIAdd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupIAdd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupIAdd, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupIAdd, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupIAdd, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupFAdd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupFAdd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupFAdd, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupFAdd, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupFAdd, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupFMin, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupFMin, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupFMin, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupFMin, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupFMin, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupUMin, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupUMin, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupUMin, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupUMin, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupUMin, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupSMin, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupSMin, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupSMin, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupSMin, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupSMin, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupFMax, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupFMax, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupFMax, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupFMax, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupFMax, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupUMax, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupUMax, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupUMax, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupUMax, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupUMax, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupSMax, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupSMax, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupSMax, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupSMax, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupSMax, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpReadPipe, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpReadPipe, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpReadPipe, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpReadPipe, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Pipe");
        Instance.Register(SDSLOp.OpReadPipe, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpReadPipe, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpWritePipe, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpWritePipe, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpWritePipe, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpWritePipe, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Pipe");
        Instance.Register(SDSLOp.OpWritePipe, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpWritePipe, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpReservedReadPipe, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpReservedReadPipe, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpReservedReadPipe, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpReservedReadPipe, OperandKind.IdRef, OperandQuantifier.One, "reserveId", "Pipe");
        Instance.Register(SDSLOp.OpReservedReadPipe, OperandKind.IdRef, OperandQuantifier.One, "index", "Pipe");
        Instance.Register(SDSLOp.OpReservedReadPipe, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Pipe");
        Instance.Register(SDSLOp.OpReservedReadPipe, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpReservedReadPipe, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpReservedWritePipe, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpReservedWritePipe, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpReservedWritePipe, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpReservedWritePipe, OperandKind.IdRef, OperandQuantifier.One, "reserveId", "Pipe");
        Instance.Register(SDSLOp.OpReservedWritePipe, OperandKind.IdRef, OperandQuantifier.One, "index", "Pipe");
        Instance.Register(SDSLOp.OpReservedWritePipe, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Pipe");
        Instance.Register(SDSLOp.OpReservedWritePipe, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpReservedWritePipe, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpReserveReadPipePackets, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpReserveReadPipePackets, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpReserveReadPipePackets, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpReserveReadPipePackets, OperandKind.IdRef, OperandQuantifier.One, "numPackets", "Pipe");
        Instance.Register(SDSLOp.OpReserveReadPipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpReserveReadPipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpReserveWritePipePackets, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpReserveWritePipePackets, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpReserveWritePipePackets, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpReserveWritePipePackets, OperandKind.IdRef, OperandQuantifier.One, "numPackets", "Pipe");
        Instance.Register(SDSLOp.OpReserveWritePipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpReserveWritePipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpCommitReadPipe, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpCommitReadPipe, OperandKind.IdRef, OperandQuantifier.One, "reserveId", "Pipe");
        Instance.Register(SDSLOp.OpCommitReadPipe, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpCommitReadPipe, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpCommitWritePipe, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpCommitWritePipe, OperandKind.IdRef, OperandQuantifier.One, "reserveId", "Pipe");
        Instance.Register(SDSLOp.OpCommitWritePipe, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpCommitWritePipe, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpIsValidReserveId, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpIsValidReserveId, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpIsValidReserveId, OperandKind.IdRef, OperandQuantifier.One, "reserveId", "Pipe");
        Instance.Register(SDSLOp.OpGetNumPipePackets, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpGetNumPipePackets, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpGetNumPipePackets, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpGetNumPipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpGetNumPipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpGetMaxPipePackets, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpGetMaxPipePackets, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpGetMaxPipePackets, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpGetMaxPipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpGetMaxPipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveReadPipePackets, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveReadPipePackets, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveReadPipePackets, OperandKind.IdScope, OperandQuantifier.One, "execution", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveReadPipePackets, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveReadPipePackets, OperandKind.IdRef, OperandQuantifier.One, "numPackets", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveReadPipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveReadPipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveWritePipePackets, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveWritePipePackets, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveWritePipePackets, OperandKind.IdScope, OperandQuantifier.One, "execution", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveWritePipePackets, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveWritePipePackets, OperandKind.IdRef, OperandQuantifier.One, "numPackets", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveWritePipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpGroupReserveWritePipePackets, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitReadPipe, OperandKind.IdScope, OperandQuantifier.One, "execution", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitReadPipe, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitReadPipe, OperandKind.IdRef, OperandQuantifier.One, "reserveId", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitReadPipe, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitReadPipe, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitWritePipe, OperandKind.IdScope, OperandQuantifier.One, "execution", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitWritePipe, OperandKind.IdRef, OperandQuantifier.One, "pipe", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitWritePipe, OperandKind.IdRef, OperandQuantifier.One, "reserveId", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitWritePipe, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpGroupCommitWritePipe, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpEnqueueMarker, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueMarker, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueMarker, OperandKind.IdRef, OperandQuantifier.One, "queue", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueMarker, OperandKind.IdRef, OperandQuantifier.One, "numEvents", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueMarker, OperandKind.IdRef, OperandQuantifier.One, "waitEvents", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueMarker, OperandKind.IdRef, OperandQuantifier.One, "retEvent", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "queue", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "flags", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "nDRange", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "numEvents", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "waitEvents", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "retEvent", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "invoke", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "param", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "paramSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.One, "paramAlign", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpEnqueueKernel, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeSubGroupCount, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeSubGroupCount, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeSubGroupCount, OperandKind.IdRef, OperandQuantifier.One, "nDRange", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeSubGroupCount, OperandKind.IdRef, OperandQuantifier.One, "invoke", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeSubGroupCount, OperandKind.IdRef, OperandQuantifier.One, "param", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeSubGroupCount, OperandKind.IdRef, OperandQuantifier.One, "paramSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeSubGroupCount, OperandKind.IdRef, OperandQuantifier.One, "paramAlign", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeMaxSubGroupSize, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeMaxSubGroupSize, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeMaxSubGroupSize, OperandKind.IdRef, OperandQuantifier.One, "nDRange", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeMaxSubGroupSize, OperandKind.IdRef, OperandQuantifier.One, "invoke", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeMaxSubGroupSize, OperandKind.IdRef, OperandQuantifier.One, "param", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeMaxSubGroupSize, OperandKind.IdRef, OperandQuantifier.One, "paramSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelNDrangeMaxSubGroupSize, OperandKind.IdRef, OperandQuantifier.One, "paramAlign", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelWorkGroupSize, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelWorkGroupSize, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelWorkGroupSize, OperandKind.IdRef, OperandQuantifier.One, "invoke", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelWorkGroupSize, OperandKind.IdRef, OperandQuantifier.One, "param", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelWorkGroupSize, OperandKind.IdRef, OperandQuantifier.One, "paramSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelWorkGroupSize, OperandKind.IdRef, OperandQuantifier.One, "paramAlign", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelPreferredWorkGroupSizeMultiple, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelPreferredWorkGroupSizeMultiple, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelPreferredWorkGroupSizeMultiple, OperandKind.IdRef, OperandQuantifier.One, "invoke", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelPreferredWorkGroupSizeMultiple, OperandKind.IdRef, OperandQuantifier.One, "param", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelPreferredWorkGroupSizeMultiple, OperandKind.IdRef, OperandQuantifier.One, "paramSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelPreferredWorkGroupSizeMultiple, OperandKind.IdRef, OperandQuantifier.One, "paramAlign", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpRetainEvent, OperandKind.IdRef, OperandQuantifier.One, "eventId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpReleaseEvent, OperandKind.IdRef, OperandQuantifier.One, "eventId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpCreateUserEvent, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpCreateUserEvent, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpIsValidEvent, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpIsValidEvent, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpIsValidEvent, OperandKind.IdRef, OperandQuantifier.One, "eventId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpSetUserEventStatus, OperandKind.IdRef, OperandQuantifier.One, "eventId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpSetUserEventStatus, OperandKind.IdRef, OperandQuantifier.One, "status", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpCaptureEventProfilingInfo, OperandKind.IdRef, OperandQuantifier.One, "eventId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpCaptureEventProfilingInfo, OperandKind.IdRef, OperandQuantifier.One, "profilingInfo", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpCaptureEventProfilingInfo, OperandKind.IdRef, OperandQuantifier.One, "value", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetDefaultQueue, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetDefaultQueue, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpBuildNDRange, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpBuildNDRange, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpBuildNDRange, OperandKind.IdRef, OperandQuantifier.One, "globalWorkSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpBuildNDRange, OperandKind.IdRef, OperandQuantifier.One, "localWorkSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpBuildNDRange, OperandKind.IdRef, OperandQuantifier.One, "globalWorkOffset", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpImageSparseSampleImplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleImplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleImplicitLod, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleExplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleExplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleExplicitLod, OperandKind.ImageOperands, OperandQuantifier.One, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefImplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefImplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefImplicitLod, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefExplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefExplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleDrefExplicitLod, OperandKind.ImageOperands, OperandQuantifier.One, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjImplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjImplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjImplicitLod, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjExplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjExplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjExplicitLod, OperandKind.ImageOperands, OperandQuantifier.One, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefImplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefImplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefImplicitLod, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefImplicitLod, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefExplicitLod, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefExplicitLod, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefExplicitLod, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSparseSampleProjDrefExplicitLod, OperandKind.ImageOperands, OperandQuantifier.One, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseFetch, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseFetch, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseFetch, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageSparseFetch, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseFetch, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseGather, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseGather, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseGather, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseGather, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseGather, OperandKind.IdRef, OperandQuantifier.One, "component", "Image");
        Instance.Register(SDSLOp.OpImageSparseGather, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseDrefGather, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseDrefGather, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseDrefGather, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSparseDrefGather, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseDrefGather, OperandKind.IdRef, OperandQuantifier.One, "dref", "Image");
        Instance.Register(SDSLOp.OpImageSparseDrefGather, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpImageSparseTexelsResident, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseTexelsResident, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseTexelsResident, OperandKind.IdRef, OperandQuantifier.One, "residentCode", "Image");
        Instance.Register(SDSLOp.OpNoLine, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpAtomicFlagTestAndSet, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFlagTestAndSet, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFlagTestAndSet, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFlagTestAndSet, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFlagTestAndSet, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFlagClear, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFlagClear, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFlagClear, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpImageSparseRead, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSparseRead, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSparseRead, OperandKind.IdRef, OperandQuantifier.One, "image", "Image");
        Instance.Register(SDSLOp.OpImageSparseRead, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSparseRead, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpSizeOf, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Miscellaneous");
        Instance.Register(SDSLOp.OpSizeOf, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpSizeOf, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Miscellaneous");
        Instance.Register(SDSLOp.OpTypePipeStorage, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpConstantPipeStorage, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpConstantPipeStorage, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpConstantPipeStorage, OperandKind.LiteralInteger, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpConstantPipeStorage, OperandKind.LiteralInteger, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpConstantPipeStorage, OperandKind.LiteralInteger, OperandQuantifier.One, "capacity", "Pipe");
        Instance.Register(SDSLOp.OpCreatePipeFromPipeStorage, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpCreatePipeFromPipeStorage, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpCreatePipeFromPipeStorage, OperandKind.IdRef, OperandQuantifier.One, "pipeStorage", "Pipe");
        Instance.Register(SDSLOp.OpGetKernelLocalSizeForSubgroupCount, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelLocalSizeForSubgroupCount, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelLocalSizeForSubgroupCount, OperandKind.IdRef, OperandQuantifier.One, "subgroupCount", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelLocalSizeForSubgroupCount, OperandKind.IdRef, OperandQuantifier.One, "invoke", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelLocalSizeForSubgroupCount, OperandKind.IdRef, OperandQuantifier.One, "param", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelLocalSizeForSubgroupCount, OperandKind.IdRef, OperandQuantifier.One, "paramSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelLocalSizeForSubgroupCount, OperandKind.IdRef, OperandQuantifier.One, "paramAlign", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelMaxNumSubgroups, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelMaxNumSubgroups, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelMaxNumSubgroups, OperandKind.IdRef, OperandQuantifier.One, "invoke", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelMaxNumSubgroups, OperandKind.IdRef, OperandQuantifier.One, "param", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelMaxNumSubgroups, OperandKind.IdRef, OperandQuantifier.One, "paramSize", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpGetKernelMaxNumSubgroups, OperandKind.IdRef, OperandQuantifier.One, "paramAlign", "Device-Side_Enqueue");
        Instance.Register(SDSLOp.OpTypeNamedBarrier, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpNamedBarrierInitialize, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Barrier");
        Instance.Register(SDSLOp.OpNamedBarrierInitialize, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Barrier");
        Instance.Register(SDSLOp.OpNamedBarrierInitialize, OperandKind.IdRef, OperandQuantifier.One, "subgroupCount", "Barrier");
        Instance.Register(SDSLOp.OpMemoryNamedBarrier, OperandKind.IdRef, OperandQuantifier.One, "namedBarrier", "Barrier");
        Instance.Register(SDSLOp.OpMemoryNamedBarrier, OperandKind.IdScope, OperandQuantifier.One, "memory", "Barrier");
        Instance.Register(SDSLOp.OpMemoryNamedBarrier, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Barrier");
        Instance.Register(SDSLOp.OpModuleProcessed, OperandKind.LiteralString, OperandQuantifier.One, "process", "Debug");
        Instance.Register(SDSLOp.OpExecutionModeId, OperandKind.IdRef, OperandQuantifier.One, "entryPoint", "Mode-Setting");
        Instance.Register(SDSLOp.OpExecutionModeId, OperandKind.ExecutionMode, OperandQuantifier.One, "mode", "Mode-Setting");
        Instance.Register(SDSLOp.OpDecorateId, OperandKind.IdRef, OperandQuantifier.One, "target", "Annotation");
        Instance.Register(SDSLOp.OpDecorateId, OperandKind.Decoration, OperandQuantifier.One, "decoration", "Annotation");
        Instance.Register(SDSLOp.OpGroupNonUniformElect, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformElect, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformElect, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAll, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAll, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAll, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAll, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAny, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAny, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAny, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAny, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAllEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAllEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAllEqual, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformAllEqual, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcast, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcast, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcast, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcast, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcast, OperandKind.IdRef, OperandQuantifier.One, "id", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcastFirst, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcastFirst, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcastFirst, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBroadcastFirst, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallot, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallot, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallot, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallot, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformInverseBallot, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformInverseBallot, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformInverseBallot, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformInverseBallot, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitExtract, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitExtract, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitExtract, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitExtract, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitExtract, OperandKind.IdRef, OperandQuantifier.One, "index", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitCount, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitCount, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitCount, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitCount, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotBitCount, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotFindLSB, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotFindLSB, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotFindLSB, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotFindLSB, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotFindMSB, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotFindMSB, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotFindMSB, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBallotFindMSB, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffle, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffle, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffle, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffle, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffle, OperandKind.IdRef, OperandQuantifier.One, "id", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleXor, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleXor, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleXor, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleXor, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleXor, OperandKind.IdRef, OperandQuantifier.One, "mask", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleUp, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleUp, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleUp, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleUp, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleUp, OperandKind.IdRef, OperandQuantifier.One, "delta", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleDown, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleDown, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleDown, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleDown, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformShuffleDown, OperandKind.IdRef, OperandQuantifier.One, "delta", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIAdd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIAdd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIAdd, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIAdd, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIAdd, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIAdd, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFAdd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFAdd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFAdd, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFAdd, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFAdd, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFAdd, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIMul, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIMul, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIMul, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIMul, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIMul, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformIMul, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMul, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMul, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMul, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMul, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMul, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMul, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMin, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMin, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMin, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMin, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMin, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMin, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMin, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMin, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMin, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMin, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMin, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMin, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMin, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMin, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMin, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMin, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMin, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMin, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMax, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMax, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMax, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMax, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMax, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformSMax, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMax, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMax, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMax, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMax, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMax, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformUMax, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMax, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMax, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMax, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMax, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMax, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformFMax, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseAnd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseAnd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseAnd, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseAnd, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseAnd, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseAnd, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseOr, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseOr, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseOr, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseOr, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseOr, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseOr, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseXor, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseXor, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseXor, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseXor, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseXor, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformBitwiseXor, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalAnd, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalAnd, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalAnd, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalAnd, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalAnd, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalAnd, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalOr, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalOr, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalOr, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalOr, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalOr, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalOr, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalXor, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalXor, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalXor, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalXor, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalXor, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformLogicalXor, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadBroadcast, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadBroadcast, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadBroadcast, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadBroadcast, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadBroadcast, OperandKind.IdRef, OperandQuantifier.One, "index", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadSwap, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadSwap, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadSwap, OperandKind.IdScope, OperandQuantifier.One, "execution", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadSwap, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadSwap, OperandKind.IdRef, OperandQuantifier.One, "direction", "Non-Uniform");
        Instance.Register(SDSLOp.OpCopyLogical, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpCopyLogical, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpCopyLogical, OperandKind.IdRef, OperandQuantifier.One, "operand", "Composite");
        Instance.Register(SDSLOp.OpPtrEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpPtrEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpPtrEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Memory");
        Instance.Register(SDSLOp.OpPtrEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Memory");
        Instance.Register(SDSLOp.OpPtrNotEqual, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpPtrNotEqual, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpPtrNotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Memory");
        Instance.Register(SDSLOp.OpPtrNotEqual, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Memory");
        Instance.Register(SDSLOp.OpPtrDiff, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpPtrDiff, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpPtrDiff, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Memory");
        Instance.Register(SDSLOp.OpPtrDiff, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Memory");
        Instance.Register(SDSLOp.OpColorAttachmentReadEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpColorAttachmentReadEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpColorAttachmentReadEXT, OperandKind.IdRef, OperandQuantifier.One, "attachment", "Image");
        Instance.Register(SDSLOp.OpColorAttachmentReadEXT, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "sample", "Image");
        Instance.Register(SDSLOp.OpDepthAttachmentReadEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpDepthAttachmentReadEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpDepthAttachmentReadEXT, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "sample", "Image");
        Instance.Register(SDSLOp.OpStencilAttachmentReadEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpStencilAttachmentReadEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpStencilAttachmentReadEXT, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "sample", "Image");
        Instance.Register(SDSLOp.OpTerminateInvocation, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpTypeUntypedPointerKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeUntypedPointerKHR, OperandKind.StorageClass, OperandQuantifier.One, "storageclass", "Type-Declaration");
        Instance.Register(SDSLOp.OpUntypedVariableKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpUntypedVariableKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpUntypedVariableKHR, OperandKind.StorageClass, OperandQuantifier.One, "storageclass", "Memory");
        Instance.Register(SDSLOp.OpUntypedVariableKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "datatype", "Memory");
        Instance.Register(SDSLOp.OpUntypedVariableKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "initializer", "Memory");
        Instance.Register(SDSLOp.OpUntypedAccessChainKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpUntypedAccessChainKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpUntypedAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "baseType", "Memory");
        Instance.Register(SDSLOp.OpUntypedAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpUntypedAccessChainKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsAccessChainKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsAccessChainKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "baseType", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsAccessChainKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Memory");
        Instance.Register(SDSLOp.OpSubgroupBallotKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupBallotKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupBallotKHR, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Group");
        Instance.Register(SDSLOp.OpSubgroupFirstInvocationKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupFirstInvocationKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupFirstInvocationKHR, OperandKind.IdRef, OperandQuantifier.One, "value", "Group");
        Instance.Register(SDSLOp.OpUntypedPtrAccessChainKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpUntypedPtrAccessChainKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpUntypedPtrAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "baseType", "Memory");
        Instance.Register(SDSLOp.OpUntypedPtrAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpUntypedPtrAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "element", "Memory");
        Instance.Register(SDSLOp.OpUntypedPtrAccessChainKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsPtrAccessChainKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsPtrAccessChainKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsPtrAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "baseType", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsPtrAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsPtrAccessChainKHR, OperandKind.IdRef, OperandQuantifier.One, "element", "Memory");
        Instance.Register(SDSLOp.OpUntypedInBoundsPtrAccessChainKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Memory");
        Instance.Register(SDSLOp.OpUntypedArrayLengthKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpUntypedArrayLengthKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpUntypedArrayLengthKHR, OperandKind.IdRef, OperandQuantifier.One, "structure", "Memory");
        Instance.Register(SDSLOp.OpUntypedArrayLengthKHR, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Memory");
        Instance.Register(SDSLOp.OpUntypedArrayLengthKHR, OperandKind.LiteralInteger, OperandQuantifier.One, "arraymember", "Memory");
        Instance.Register(SDSLOp.OpUntypedPrefetchKHR, OperandKind.IdRef, OperandQuantifier.One, "pointerType", "Memory");
        Instance.Register(SDSLOp.OpUntypedPrefetchKHR, OperandKind.IdRef, OperandQuantifier.One, "numBytes", "Memory");
        Instance.Register(SDSLOp.OpUntypedPrefetchKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "rw", "Memory");
        Instance.Register(SDSLOp.OpUntypedPrefetchKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "locality", "Memory");
        Instance.Register(SDSLOp.OpUntypedPrefetchKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "cachetype", "Memory");
        Instance.Register(SDSLOp.OpSubgroupAllKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupAllKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupAllKHR, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Group");
        Instance.Register(SDSLOp.OpSubgroupAnyKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupAnyKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupAnyKHR, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Group");
        Instance.Register(SDSLOp.OpSubgroupAllEqualKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupAllEqualKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupAllEqualKHR, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Group");
        Instance.Register(SDSLOp.OpGroupNonUniformRotateKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupNonUniformRotateKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupNonUniformRotateKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupNonUniformRotateKHR, OperandKind.IdRef, OperandQuantifier.One, "value", "Group");
        Instance.Register(SDSLOp.OpGroupNonUniformRotateKHR, OperandKind.IdRef, OperandQuantifier.One, "delta", "Group");
        Instance.Register(SDSLOp.OpGroupNonUniformRotateKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "clustersize", "Group");
        Instance.Register(SDSLOp.OpSubgroupReadInvocationKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupReadInvocationKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupReadInvocationKHR, OperandKind.IdRef, OperandQuantifier.One, "value", "Group");
        Instance.Register(SDSLOp.OpSubgroupReadInvocationKHR, OperandKind.IdRef, OperandQuantifier.One, "index", "Group");
        Instance.Register(SDSLOp.OpExtInstWithForwardRefsKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Extension");
        Instance.Register(SDSLOp.OpExtInstWithForwardRefsKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Extension");
        Instance.Register(SDSLOp.OpExtInstWithForwardRefsKHR, OperandKind.IdRef, OperandQuantifier.One, "set", "Extension");
        Instance.Register(SDSLOp.OpExtInstWithForwardRefsKHR, OperandKind.LiteralExtInstInteger, OperandQuantifier.One, "instruction", "Extension");
        Instance.Register(SDSLOp.OpExtInstWithForwardRefsKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Extension");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "accel", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "rayFlags", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "cullMask", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "sBTOffset", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "sBTStride", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "missIndex", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "rayOrigin", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "rayTmin", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "rayDirection", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "rayTmax", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayKHR, OperandKind.IdRef, OperandQuantifier.One, "payload", "Reserved");
        Instance.Register(SDSLOp.OpExecuteCallableKHR, OperandKind.IdRef, OperandQuantifier.One, "sBTIndex", "Reserved");
        Instance.Register(SDSLOp.OpExecuteCallableKHR, OperandKind.IdRef, OperandQuantifier.One, "callableData", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToAccelerationStructureKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToAccelerationStructureKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToAccelerationStructureKHR, OperandKind.IdRef, OperandQuantifier.One, "accel", "Reserved");
        Instance.Register(SDSLOp.OpIgnoreIntersectionKHR, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpTerminateRayKHR, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpSDot, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSDot, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSDot, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Arithmetic");
        Instance.Register(SDSLOp.OpSDot, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Arithmetic");
        Instance.Register(SDSLOp.OpSDot, OperandKind.PackedVectorFormat, OperandQuantifier.ZeroOrOne, "packedvectorformat", "Arithmetic");
        Instance.Register(SDSLOp.OpUDot, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpUDot, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpUDot, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Arithmetic");
        Instance.Register(SDSLOp.OpUDot, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Arithmetic");
        Instance.Register(SDSLOp.OpUDot, OperandKind.PackedVectorFormat, OperandQuantifier.ZeroOrOne, "packedvectorformat", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDot, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDot, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDot, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDot, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDot, OperandKind.PackedVectorFormat, OperandQuantifier.ZeroOrOne, "packedvectorformat", "Arithmetic");
        Instance.Register(SDSLOp.OpSDotAccSat, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSDotAccSat, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Arithmetic");
        Instance.Register(SDSLOp.OpSDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Arithmetic");
        Instance.Register(SDSLOp.OpSDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "accumulator", "Arithmetic");
        Instance.Register(SDSLOp.OpSDotAccSat, OperandKind.PackedVectorFormat, OperandQuantifier.ZeroOrOne, "packedvectorformat", "Arithmetic");
        Instance.Register(SDSLOp.OpUDotAccSat, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpUDotAccSat, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpUDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Arithmetic");
        Instance.Register(SDSLOp.OpUDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Arithmetic");
        Instance.Register(SDSLOp.OpUDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "accumulator", "Arithmetic");
        Instance.Register(SDSLOp.OpUDotAccSat, OperandKind.PackedVectorFormat, OperandQuantifier.ZeroOrOne, "packedvectorformat", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDotAccSat, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDotAccSat, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "vector1", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "vector2", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDotAccSat, OperandKind.IdRef, OperandQuantifier.One, "accumulator", "Arithmetic");
        Instance.Register(SDSLOp.OpSUDotAccSat, OperandKind.PackedVectorFormat, OperandQuantifier.ZeroOrOne, "packedvectorformat", "Arithmetic");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixKHR, OperandKind.IdRef, OperandQuantifier.One, "componentType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixKHR, OperandKind.IdScope, OperandQuantifier.One, "scope", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixKHR, OperandKind.IdRef, OperandQuantifier.One, "rows", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixKHR, OperandKind.IdRef, OperandQuantifier.One, "columns", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixKHR, OperandKind.IdRef, OperandQuantifier.One, "use", "Type-Declaration");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadKHR, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadKHR, OperandKind.IdRef, OperandQuantifier.One, "memoryLayout", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "stride", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadKHR, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryoperand", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreKHR, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreKHR, OperandKind.IdRef, OperandQuantifier.One, "objectId", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreKHR, OperandKind.IdRef, OperandQuantifier.One, "memoryLayout", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreKHR, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "stride", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreKHR, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryoperand", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddKHR, OperandKind.IdRef, OperandQuantifier.One, "a", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddKHR, OperandKind.IdRef, OperandQuantifier.One, "b", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddKHR, OperandKind.IdRef, OperandQuantifier.One, "c", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddKHR, OperandKind.CooperativeMatrixOperands, OperandQuantifier.ZeroOrOne, "cooperativematrixoperands", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixLengthKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Miscellaneous");
        Instance.Register(SDSLOp.OpCooperativeMatrixLengthKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpCooperativeMatrixLengthKHR, OperandKind.IdRef, OperandQuantifier.One, "type", "Miscellaneous");
        Instance.Register(SDSLOp.OpConstantCompositeReplicateEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantCompositeReplicateEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpConstantCompositeReplicateEXT, OperandKind.IdRef, OperandQuantifier.One, "value", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantCompositeReplicateEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantCompositeReplicateEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantCompositeReplicateEXT, OperandKind.IdRef, OperandQuantifier.One, "value", "Constant-Creation");
        Instance.Register(SDSLOp.OpCompositeConstructReplicateEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpCompositeConstructReplicateEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpCompositeConstructReplicateEXT, OperandKind.IdRef, OperandQuantifier.One, "value", "Composite");
        Instance.Register(SDSLOp.OpTypeRayQueryKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpRayQueryInitializeKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryInitializeKHR, OperandKind.IdRef, OperandQuantifier.One, "accel", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryInitializeKHR, OperandKind.IdRef, OperandQuantifier.One, "rayFlags", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryInitializeKHR, OperandKind.IdRef, OperandQuantifier.One, "cullMask", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryInitializeKHR, OperandKind.IdRef, OperandQuantifier.One, "rayOrigin", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryInitializeKHR, OperandKind.IdRef, OperandQuantifier.One, "rayTMin", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryInitializeKHR, OperandKind.IdRef, OperandQuantifier.One, "rayDirection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryInitializeKHR, OperandKind.IdRef, OperandQuantifier.One, "rayTMax", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryTerminateKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGenerateIntersectionKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGenerateIntersectionKHR, OperandKind.IdRef, OperandQuantifier.One, "hitT", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryConfirmIntersectionKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryProceedKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryProceedKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryProceedKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTypeKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTypeKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTypeKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTypeKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpImageSampleWeightedQCOM, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleWeightedQCOM, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleWeightedQCOM, OperandKind.IdRef, OperandQuantifier.One, "texture", "Image");
        Instance.Register(SDSLOp.OpImageSampleWeightedQCOM, OperandKind.IdRef, OperandQuantifier.One, "coordinates", "Image");
        Instance.Register(SDSLOp.OpImageSampleWeightedQCOM, OperandKind.IdRef, OperandQuantifier.One, "weights", "Image");
        Instance.Register(SDSLOp.OpImageBoxFilterQCOM, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageBoxFilterQCOM, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageBoxFilterQCOM, OperandKind.IdRef, OperandQuantifier.One, "texture", "Image");
        Instance.Register(SDSLOp.OpImageBoxFilterQCOM, OperandKind.IdRef, OperandQuantifier.One, "coordinates", "Image");
        Instance.Register(SDSLOp.OpImageBoxFilterQCOM, OperandKind.IdRef, OperandQuantifier.One, "boxSize", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSSDQCOM, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSSDQCOM, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "target", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "reference", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "blockSize", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSADQCOM, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSADQCOM, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "target", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "reference", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "blockSize", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSSDQCOM, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSSDQCOM, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetSampledImage", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceSampledImage", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "blockSize", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSADQCOM, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSADQCOM, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetSampledImage", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceSampledImage", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchWindowSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "blockSize", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSSDQCOM, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSSDQCOM, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetSampledImage", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceSampledImage", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSSDQCOM, OperandKind.IdRef, OperandQuantifier.One, "blockSize", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSADQCOM, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSADQCOM, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetSampledImage", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "targetCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceSampledImage", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "referenceCoordinates", "Image");
        Instance.Register(SDSLOp.OpImageBlockMatchGatherSADQCOM, OperandKind.IdRef, OperandQuantifier.One, "blockSize", "Image");
        Instance.Register(SDSLOp.OpGroupIAddNonUniformAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupIAddNonUniformAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupIAddNonUniformAMD, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupIAddNonUniformAMD, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupIAddNonUniformAMD, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupFAddNonUniformAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupFAddNonUniformAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupFAddNonUniformAMD, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupFAddNonUniformAMD, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupFAddNonUniformAMD, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupFMinNonUniformAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupFMinNonUniformAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupFMinNonUniformAMD, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupFMinNonUniformAMD, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupFMinNonUniformAMD, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupUMinNonUniformAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupUMinNonUniformAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupUMinNonUniformAMD, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupUMinNonUniformAMD, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupUMinNonUniformAMD, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupSMinNonUniformAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupSMinNonUniformAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupSMinNonUniformAMD, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupSMinNonUniformAMD, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupSMinNonUniformAMD, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupFMaxNonUniformAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupFMaxNonUniformAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupFMaxNonUniformAMD, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupFMaxNonUniformAMD, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupFMaxNonUniformAMD, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupUMaxNonUniformAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupUMaxNonUniformAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupUMaxNonUniformAMD, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupUMaxNonUniformAMD, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupUMaxNonUniformAMD, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupSMaxNonUniformAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupSMaxNonUniformAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupSMaxNonUniformAMD, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupSMaxNonUniformAMD, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupSMaxNonUniformAMD, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpFragmentMaskFetchAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpFragmentMaskFetchAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpFragmentMaskFetchAMD, OperandKind.IdRef, OperandQuantifier.One, "image", "Reserved");
        Instance.Register(SDSLOp.OpFragmentMaskFetchAMD, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Reserved");
        Instance.Register(SDSLOp.OpFragmentFetchAMD, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpFragmentFetchAMD, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpFragmentFetchAMD, OperandKind.IdRef, OperandQuantifier.One, "image", "Reserved");
        Instance.Register(SDSLOp.OpFragmentFetchAMD, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Reserved");
        Instance.Register(SDSLOp.OpFragmentFetchAMD, OperandKind.IdRef, OperandQuantifier.One, "fragmentIndex", "Reserved");
        Instance.Register(SDSLOp.OpReadClockKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpReadClockKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpReadClockKHR, OperandKind.IdScope, OperandQuantifier.One, "scope", "Reserved");
        Instance.Register(SDSLOp.OpAllocateNodePayloadsAMDX, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpAllocateNodePayloadsAMDX, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpAllocateNodePayloadsAMDX, OperandKind.IdScope, OperandQuantifier.One, "visibility", "Reserved");
        Instance.Register(SDSLOp.OpAllocateNodePayloadsAMDX, OperandKind.IdRef, OperandQuantifier.One, "payloadCount", "Reserved");
        Instance.Register(SDSLOp.OpAllocateNodePayloadsAMDX, OperandKind.IdRef, OperandQuantifier.One, "nodeIndex", "Reserved");
        Instance.Register(SDSLOp.OpEnqueueNodePayloadsAMDX, OperandKind.IdRef, OperandQuantifier.One, "payloadArray", "Reserved");
        Instance.Register(SDSLOp.OpTypeNodePayloadArrayAMDX, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTypeNodePayloadArrayAMDX, OperandKind.IdRef, OperandQuantifier.One, "payloadType", "Reserved");
        Instance.Register(SDSLOp.OpFinishWritingNodePayloadAMDX, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpFinishWritingNodePayloadAMDX, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpFinishWritingNodePayloadAMDX, OperandKind.IdRef, OperandQuantifier.One, "payload", "Reserved");
        Instance.Register(SDSLOp.OpNodePayloadArrayLengthAMDX, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpNodePayloadArrayLengthAMDX, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpNodePayloadArrayLengthAMDX, OperandKind.IdRef, OperandQuantifier.One, "payloadArray", "Reserved");
        Instance.Register(SDSLOp.OpIsNodePayloadValidAMDX, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpIsNodePayloadValidAMDX, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpIsNodePayloadValidAMDX, OperandKind.IdRef, OperandQuantifier.One, "payloadType", "Reserved");
        Instance.Register(SDSLOp.OpIsNodePayloadValidAMDX, OperandKind.IdRef, OperandQuantifier.One, "nodeIndex", "Reserved");
        Instance.Register(SDSLOp.OpConstantStringAMDX, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpConstantStringAMDX, OperandKind.LiteralString, OperandQuantifier.One, "literalString", "Reserved");
        Instance.Register(SDSLOp.OpSpecConstantStringAMDX, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpSpecConstantStringAMDX, OperandKind.LiteralString, OperandQuantifier.One, "literalString", "Reserved");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadAllKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadAllKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadAllKHR, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadAnyKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadAnyKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformQuadAnyKHR, OperandKind.IdRef, OperandQuantifier.One, "predicate", "Non-Uniform");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "accelerationStructure", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "instanceId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "primitiveId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "geometryIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "hitKind", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordOffset", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordStride", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "origin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "tMin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "direction", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "tMax", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "currentTime", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitMotionNV, OperandKind.IdRef, OperandQuantifier.One, "hitObjectAttributes", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "accelerationStructure", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "instanceId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "primitiveId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "geometryIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "hitKind", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "origin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "tMin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "direction", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "tMax", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "currentTime", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexMotionNV, OperandKind.IdRef, OperandQuantifier.One, "hitObjectAttributes", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissMotionNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissMotionNV, OperandKind.IdRef, OperandQuantifier.One, "origin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissMotionNV, OperandKind.IdRef, OperandQuantifier.One, "tMin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissMotionNV, OperandKind.IdRef, OperandQuantifier.One, "direction", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissMotionNV, OperandKind.IdRef, OperandQuantifier.One, "tMax", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissMotionNV, OperandKind.IdRef, OperandQuantifier.One, "currentTime", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldToObjectNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldToObjectNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldToObjectNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectToWorldNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectToWorldNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectToWorldNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectRayDirectionNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectRayDirectionNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectRayDirectionNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectRayOriginNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectRayOriginNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetObjectRayOriginNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "accelerationStructure", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayFlags", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "cullmask", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordOffset", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordStride", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "missIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "origin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "tMin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "direction", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "tMax", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "time", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "payload", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetShaderRecordBufferHandleNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetShaderRecordBufferHandleNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetShaderRecordBufferHandleNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetShaderBindingTableRecordIndexNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetShaderBindingTableRecordIndexNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetShaderBindingTableRecordIndexNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordEmptyNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "accelerationStructure", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "rayFlags", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "cullmask", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordOffset", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordStride", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "missIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "origin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "tMin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "direction", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "tMax", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectTraceRayNV, OperandKind.IdRef, OperandQuantifier.One, "payload", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "accelerationStructure", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "instanceId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "primitiveId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "geometryIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "hitKind", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordOffset", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordStride", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "origin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "tMin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "direction", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "tMax", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitNV, OperandKind.IdRef, OperandQuantifier.One, "hitObjectAttributes", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "accelerationStructure", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "instanceId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "primitiveId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "geometryIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "hitKind", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "sBTRecordIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "origin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "tMin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "direction", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "tMax", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordHitWithIndexNV, OperandKind.IdRef, OperandQuantifier.One, "hitObjectAttributes", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissNV, OperandKind.IdRef, OperandQuantifier.One, "sBTIndex", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissNV, OperandKind.IdRef, OperandQuantifier.One, "origin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissNV, OperandKind.IdRef, OperandQuantifier.One, "tMin", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissNV, OperandKind.IdRef, OperandQuantifier.One, "direction", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectRecordMissNV, OperandKind.IdRef, OperandQuantifier.One, "tMax", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectExecuteShaderNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectExecuteShaderNV, OperandKind.IdRef, OperandQuantifier.One, "payload", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetCurrentTimeNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetCurrentTimeNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetCurrentTimeNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetAttributesNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetAttributesNV, OperandKind.IdRef, OperandQuantifier.One, "hitObjectAttribute", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetHitKindNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetHitKindNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetHitKindNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetPrimitiveIndexNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetPrimitiveIndexNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetPrimitiveIndexNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetGeometryIndexNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetGeometryIndexNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetGeometryIndexNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetInstanceIdNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetInstanceIdNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetInstanceIdNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetInstanceCustomIndexNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetInstanceCustomIndexNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetInstanceCustomIndexNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldRayDirectionNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldRayDirectionNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldRayDirectionNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldRayOriginNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldRayOriginNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetWorldRayOriginNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetRayTMaxNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetRayTMaxNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetRayTMaxNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetRayTMinNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetRayTMinNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectGetRayTMinNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsEmptyNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsEmptyNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsEmptyNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsHitNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsHitNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsHitNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsMissNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsMissNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpHitObjectIsMissNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpReorderThreadWithHitObjectNV, OperandKind.IdRef, OperandQuantifier.One, "hitObject", "Reserved");
        Instance.Register(SDSLOp.OpReorderThreadWithHitObjectNV, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "hint", "Reserved");
        Instance.Register(SDSLOp.OpReorderThreadWithHitObjectNV, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "bits", "Reserved");
        Instance.Register(SDSLOp.OpReorderThreadWithHintNV, OperandKind.IdRef, OperandQuantifier.One, "hint", "Reserved");
        Instance.Register(SDSLOp.OpReorderThreadWithHintNV, OperandKind.IdRef, OperandQuantifier.One, "bits", "Reserved");
        Instance.Register(SDSLOp.OpTypeHitObjectNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpImageSampleFootprintNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Image");
        Instance.Register(SDSLOp.OpImageSampleFootprintNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Image");
        Instance.Register(SDSLOp.OpImageSampleFootprintNV, OperandKind.IdRef, OperandQuantifier.One, "sampledImage", "Image");
        Instance.Register(SDSLOp.OpImageSampleFootprintNV, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Image");
        Instance.Register(SDSLOp.OpImageSampleFootprintNV, OperandKind.IdRef, OperandQuantifier.One, "granularity", "Image");
        Instance.Register(SDSLOp.OpImageSampleFootprintNV, OperandKind.IdRef, OperandQuantifier.One, "coarse", "Image");
        Instance.Register(SDSLOp.OpImageSampleFootprintNV, OperandKind.ImageOperands, OperandQuantifier.ZeroOrOne, "imageoperands", "Image");
        Instance.Register(SDSLOp.OpCooperativeMatrixConvertNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpCooperativeMatrixConvertNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpCooperativeMatrixConvertNV, OperandKind.IdRef, OperandQuantifier.One, "matrix", "Conversion");
        Instance.Register(SDSLOp.OpEmitMeshTasksEXT, OperandKind.IdRef, OperandQuantifier.One, "groupCountX", "Reserved");
        Instance.Register(SDSLOp.OpEmitMeshTasksEXT, OperandKind.IdRef, OperandQuantifier.One, "groupCountY", "Reserved");
        Instance.Register(SDSLOp.OpEmitMeshTasksEXT, OperandKind.IdRef, OperandQuantifier.One, "groupCountZ", "Reserved");
        Instance.Register(SDSLOp.OpEmitMeshTasksEXT, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "payload", "Reserved");
        Instance.Register(SDSLOp.OpSetMeshOutputsEXT, OperandKind.IdRef, OperandQuantifier.One, "vertexCount", "Reserved");
        Instance.Register(SDSLOp.OpSetMeshOutputsEXT, OperandKind.IdRef, OperandQuantifier.One, "primitiveCount", "Reserved");
        Instance.Register(SDSLOp.OpGroupNonUniformPartitionNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformPartitionNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Non-Uniform");
        Instance.Register(SDSLOp.OpGroupNonUniformPartitionNV, OperandKind.IdRef, OperandQuantifier.One, "value", "Non-Uniform");
        Instance.Register(SDSLOp.OpWritePackedPrimitiveIndices4x8NV, OperandKind.IdRef, OperandQuantifier.One, "indexOffset", "Reserved");
        Instance.Register(SDSLOp.OpWritePackedPrimitiveIndices4x8NV, OperandKind.IdRef, OperandQuantifier.One, "packedIndices", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexPositionNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexPositionNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexPositionNV, OperandKind.IdRef, OperandQuantifier.One, "accel", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexPositionNV, OperandKind.IdRef, OperandQuantifier.One, "instanceId", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexPositionNV, OperandKind.IdRef, OperandQuantifier.One, "geometryIndex", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexPositionNV, OperandKind.IdRef, OperandQuantifier.One, "primitiveIndex", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexPositionNV, OperandKind.IdRef, OperandQuantifier.One, "barycentric", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexBarycentricNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexBarycentricNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexBarycentricNV, OperandKind.IdRef, OperandQuantifier.One, "accel", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexBarycentricNV, OperandKind.IdRef, OperandQuantifier.One, "instanceId", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexBarycentricNV, OperandKind.IdRef, OperandQuantifier.One, "geometryIndex", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexBarycentricNV, OperandKind.IdRef, OperandQuantifier.One, "primitiveIndex", "Reserved");
        Instance.Register(SDSLOp.OpFetchMicroTriangleVertexBarycentricNV, OperandKind.IdRef, OperandQuantifier.One, "barycentric", "Reserved");
        Instance.Register(SDSLOp.OpReportIntersectionKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpReportIntersectionKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpReportIntersectionKHR, OperandKind.IdRef, OperandQuantifier.One, "hit", "Reserved");
        Instance.Register(SDSLOp.OpReportIntersectionKHR, OperandKind.IdRef, OperandQuantifier.One, "hitKind", "Reserved");
        Instance.Register(SDSLOp.OpIgnoreIntersectionNV, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpTerminateRayNV, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "accel", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "rayFlags", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "cullMask", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "sBTOffset", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "sBTStride", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "missIndex", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "rayOrigin", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "rayTmin", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "rayDirection", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "rayTmax", "Reserved");
        Instance.Register(SDSLOp.OpTraceNV, OperandKind.IdRef, OperandQuantifier.One, "payloadId", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "accel", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayFlags", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "cullMask", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTOffset", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTStride", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "missIndex", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayOrigin", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayTmin", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayDirection", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayTmax", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "time", "Reserved");
        Instance.Register(SDSLOp.OpTraceMotionNV, OperandKind.IdRef, OperandQuantifier.One, "payloadId", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "accel", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayFlags", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "cullMask", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTOffset", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "sBTStride", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "missIndex", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayOrigin", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayTmin", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayDirection", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "rayTmax", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "time", "Reserved");
        Instance.Register(SDSLOp.OpTraceRayMotionNV, OperandKind.IdRef, OperandQuantifier.One, "payload", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTriangleVertexPositionsKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTriangleVertexPositionsKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTriangleVertexPositionsKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTriangleVertexPositionsKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpTypeAccelerationStructureKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpExecuteCallableNV, OperandKind.IdRef, OperandQuantifier.One, "sBTIndex", "Reserved");
        Instance.Register(SDSLOp.OpExecuteCallableNV, OperandKind.IdRef, OperandQuantifier.One, "callableDataId", "Reserved");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixNV, OperandKind.IdRef, OperandQuantifier.One, "componentType", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixNV, OperandKind.IdScope, OperandQuantifier.One, "execution", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixNV, OperandKind.IdRef, OperandQuantifier.One, "rows", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeCooperativeMatrixNV, OperandKind.IdRef, OperandQuantifier.One, "columns", "Type-Declaration");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadNV, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadNV, OperandKind.IdRef, OperandQuantifier.One, "stride", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadNV, OperandKind.IdRef, OperandQuantifier.One, "columnMajor", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadNV, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreNV, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreNV, OperandKind.IdRef, OperandQuantifier.One, "objectId", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreNV, OperandKind.IdRef, OperandQuantifier.One, "stride", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreNV, OperandKind.IdRef, OperandQuantifier.One, "columnMajor", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreNV, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddNV, OperandKind.IdRef, OperandQuantifier.One, "a", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddNV, OperandKind.IdRef, OperandQuantifier.One, "b", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixMulAddNV, OperandKind.IdRef, OperandQuantifier.One, "c", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixLengthNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixLengthNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixLengthNV, OperandKind.IdRef, OperandQuantifier.One, "type", "Reserved");
        Instance.Register(SDSLOp.OpBeginInvocationInterlockEXT, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpEndInvocationInterlockEXT, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpCooperativeMatrixReduceNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixReduceNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixReduceNV, OperandKind.IdRef, OperandQuantifier.One, "matrix", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixReduceNV, OperandKind.CooperativeMatrixReduce, OperandQuantifier.One, "reduce", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixReduceNV, OperandKind.IdRef, OperandQuantifier.One, "combineFunc", "Arithmetic");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadTensorNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadTensorNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadTensorNV, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadTensorNV, OperandKind.IdRef, OperandQuantifier.One, "objectId", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadTensorNV, OperandKind.IdRef, OperandQuantifier.One, "tensorLayout", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadTensorNV, OperandKind.MemoryAccess, OperandQuantifier.One, "memoryOperand", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixLoadTensorNV, OperandKind.TensorAddressingOperands, OperandQuantifier.One, "tensorAddressingOperands", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreTensorNV, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreTensorNV, OperandKind.IdRef, OperandQuantifier.One, "objectId", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreTensorNV, OperandKind.IdRef, OperandQuantifier.One, "tensorLayout", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreTensorNV, OperandKind.MemoryAccess, OperandQuantifier.One, "memoryOperand", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixStoreTensorNV, OperandKind.TensorAddressingOperands, OperandQuantifier.One, "tensorAddressingOperands", "Memory");
        Instance.Register(SDSLOp.OpCooperativeMatrixPerElementOpNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Function");
        Instance.Register(SDSLOp.OpCooperativeMatrixPerElementOpNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Function");
        Instance.Register(SDSLOp.OpCooperativeMatrixPerElementOpNV, OperandKind.IdRef, OperandQuantifier.One, "matrix", "Function");
        Instance.Register(SDSLOp.OpCooperativeMatrixPerElementOpNV, OperandKind.IdRef, OperandQuantifier.One, "func", "Function");
        Instance.Register(SDSLOp.OpCooperativeMatrixPerElementOpNV, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Function");
        Instance.Register(SDSLOp.OpTypeTensorLayoutNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeTensorLayoutNV, OperandKind.IdRef, OperandQuantifier.One, "dim", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeTensorLayoutNV, OperandKind.IdRef, OperandQuantifier.One, "clampMode", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeTensorViewNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeTensorViewNV, OperandKind.IdRef, OperandQuantifier.One, "dim", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeTensorViewNV, OperandKind.IdRef, OperandQuantifier.One, "hasDimensions", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeTensorViewNV, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Type-Declaration");
        Instance.Register(SDSLOp.OpCreateTensorLayoutNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpCreateTensorLayoutNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetDimensionNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetDimensionNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetDimensionNV, OperandKind.IdRef, OperandQuantifier.One, "tensorLayout", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetDimensionNV, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetStrideNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetStrideNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetStrideNV, OperandKind.IdRef, OperandQuantifier.One, "tensorLayout", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetStrideNV, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSliceNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSliceNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSliceNV, OperandKind.IdRef, OperandQuantifier.One, "tensorLayout", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSliceNV, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetClampValueNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetClampValueNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetClampValueNV, OperandKind.IdRef, OperandQuantifier.One, "tensorLayout", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetClampValueNV, OperandKind.IdRef, OperandQuantifier.One, "value", "Reserved");
        Instance.Register(SDSLOp.OpCreateTensorViewNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpCreateTensorViewNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetDimensionNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetDimensionNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetDimensionNV, OperandKind.IdRef, OperandQuantifier.One, "tensorView", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetDimensionNV, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetStrideNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetStrideNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetStrideNV, OperandKind.IdRef, OperandQuantifier.One, "tensorView", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetStrideNV, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Reserved");
        Instance.Register(SDSLOp.OpDemoteToHelperInvocation, OperandKind.None, null, "Debug");
        Instance.Register(SDSLOp.OpIsHelperInvocationEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpIsHelperInvocationEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetClipNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetClipNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetClipNV, OperandKind.IdRef, OperandQuantifier.One, "tensorView", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetClipNV, OperandKind.IdRef, OperandQuantifier.One, "clipRowOffset", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetClipNV, OperandKind.IdRef, OperandQuantifier.One, "clipRowSpan", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetClipNV, OperandKind.IdRef, OperandQuantifier.One, "clipColOffset", "Reserved");
        Instance.Register(SDSLOp.OpTensorViewSetClipNV, OperandKind.IdRef, OperandQuantifier.One, "clipColSpan", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetBlockSizeNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetBlockSizeNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetBlockSizeNV, OperandKind.IdRef, OperandQuantifier.One, "tensorLayout", "Reserved");
        Instance.Register(SDSLOp.OpTensorLayoutSetBlockSizeNV, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Reserved");
        Instance.Register(SDSLOp.OpCooperativeMatrixTransposeNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpCooperativeMatrixTransposeNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpCooperativeMatrixTransposeNV, OperandKind.IdRef, OperandQuantifier.One, "matrix", "Conversion");
        Instance.Register(SDSLOp.OpConvertUToImageNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToImageNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToImageNV, OperandKind.IdRef, OperandQuantifier.One, "operand", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToSamplerNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToSamplerNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToSamplerNV, OperandKind.IdRef, OperandQuantifier.One, "operand", "Reserved");
        Instance.Register(SDSLOp.OpConvertImageToUNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpConvertImageToUNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpConvertImageToUNV, OperandKind.IdRef, OperandQuantifier.One, "operand", "Reserved");
        Instance.Register(SDSLOp.OpConvertSamplerToUNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpConvertSamplerToUNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpConvertSamplerToUNV, OperandKind.IdRef, OperandQuantifier.One, "operand", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToSampledImageNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToSampledImageNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpConvertUToSampledImageNV, OperandKind.IdRef, OperandQuantifier.One, "operand", "Reserved");
        Instance.Register(SDSLOp.OpConvertSampledImageToUNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpConvertSampledImageToUNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpConvertSampledImageToUNV, OperandKind.IdRef, OperandQuantifier.One, "operand", "Reserved");
        Instance.Register(SDSLOp.OpSamplerImageAddressingModeNV, OperandKind.LiteralInteger, OperandQuantifier.One, "bitWidth", "Reserved");
        Instance.Register(SDSLOp.OpRawAccessChainNV, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpRawAccessChainNV, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpRawAccessChainNV, OperandKind.IdRef, OperandQuantifier.One, "baseId", "Memory");
        Instance.Register(SDSLOp.OpRawAccessChainNV, OperandKind.IdRef, OperandQuantifier.One, "bytestride", "Memory");
        Instance.Register(SDSLOp.OpRawAccessChainNV, OperandKind.IdRef, OperandQuantifier.One, "elementindex", "Memory");
        Instance.Register(SDSLOp.OpRawAccessChainNV, OperandKind.IdRef, OperandQuantifier.One, "byteoffset", "Memory");
        Instance.Register(SDSLOp.OpRawAccessChainNV, OperandKind.RawAccessChainOperands, OperandQuantifier.ZeroOrOne, "rawaccesschainoperands", "Memory");
        Instance.Register(SDSLOp.OpSubgroupShuffleINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleINTEL, OperandKind.IdRef, OperandQuantifier.One, "data", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleINTEL, OperandKind.IdRef, OperandQuantifier.One, "invocationId", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleDownINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleDownINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleDownINTEL, OperandKind.IdRef, OperandQuantifier.One, "current", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleDownINTEL, OperandKind.IdRef, OperandQuantifier.One, "next", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleDownINTEL, OperandKind.IdRef, OperandQuantifier.One, "delta", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleUpINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleUpINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleUpINTEL, OperandKind.IdRef, OperandQuantifier.One, "previous", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleUpINTEL, OperandKind.IdRef, OperandQuantifier.One, "current", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleUpINTEL, OperandKind.IdRef, OperandQuantifier.One, "delta", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleXorINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleXorINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleXorINTEL, OperandKind.IdRef, OperandQuantifier.One, "data", "Group");
        Instance.Register(SDSLOp.OpSubgroupShuffleXorINTEL, OperandKind.IdRef, OperandQuantifier.One, "value", "Group");
        Instance.Register(SDSLOp.OpSubgroupBlockReadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupBlockReadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupBlockReadINTEL, OperandKind.IdRef, OperandQuantifier.One, "ptr", "Group");
        Instance.Register(SDSLOp.OpSubgroupBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "ptr", "Group");
        Instance.Register(SDSLOp.OpSubgroupBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "data", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageBlockReadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageBlockReadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageBlockReadINTEL, OperandKind.IdRef, OperandQuantifier.One, "image", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageBlockReadINTEL, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "image", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "data", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockReadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockReadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockReadINTEL, OperandKind.IdRef, OperandQuantifier.One, "image", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockReadINTEL, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockReadINTEL, OperandKind.IdRef, OperandQuantifier.One, "width", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockReadINTEL, OperandKind.IdRef, OperandQuantifier.One, "height", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "image", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "coordinate", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "width", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "height", "Group");
        Instance.Register(SDSLOp.OpSubgroupImageMediaBlockWriteINTEL, OperandKind.IdRef, OperandQuantifier.One, "data", "Group");
        Instance.Register(SDSLOp.OpUCountLeadingZerosINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpUCountLeadingZerosINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpUCountLeadingZerosINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand", "Reserved");
        Instance.Register(SDSLOp.OpUCountTrailingZerosINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpUCountTrailingZerosINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpUCountTrailingZerosINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand", "Reserved");
        Instance.Register(SDSLOp.OpAbsISubINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpAbsISubINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpAbsISubINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpAbsISubINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpAbsUSubINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpAbsUSubINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpAbsUSubINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpAbsUSubINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpIAddSatINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpIAddSatINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpIAddSatINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpIAddSatINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpUAddSatINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpUAddSatINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpUAddSatINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpUAddSatINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpIAverageINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpIAverageINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpIAverageINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpIAverageINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpUAverageINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpUAverageINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpUAverageINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpUAverageINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpIAverageRoundedINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpIAverageRoundedINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpIAverageRoundedINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpIAverageRoundedINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpUAverageRoundedINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpUAverageRoundedINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpUAverageRoundedINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpUAverageRoundedINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpISubSatINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpISubSatINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpISubSatINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpISubSatINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpUSubSatINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpUSubSatINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpUSubSatINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpUSubSatINTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpIMul32x16INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpIMul32x16INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpIMul32x16INTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpIMul32x16INTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpUMul32x16INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpUMul32x16INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpUMul32x16INTEL, OperandKind.IdRef, OperandQuantifier.One, "operand1", "Reserved");
        Instance.Register(SDSLOp.OpUMul32x16INTEL, OperandKind.IdRef, OperandQuantifier.One, "operand2", "Reserved");
        Instance.Register(SDSLOp.OpConstantFunctionPointerINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpConstantFunctionPointerINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpConstantFunctionPointerINTEL, OperandKind.IdRef, OperandQuantifier.One, "function", "@exclude");
        Instance.Register(SDSLOp.OpFunctionPointerCallINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFunctionPointerCallINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFunctionPointerCallINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "@exclude");
        Instance.Register(SDSLOp.OpAsmTargetINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpAsmTargetINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpAsmTargetINTEL, OperandKind.LiteralString, OperandQuantifier.One, "asmtarget", "@exclude");
        Instance.Register(SDSLOp.OpAsmINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpAsmINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpAsmINTEL, OperandKind.IdRef, OperandQuantifier.One, "asmtype", "@exclude");
        Instance.Register(SDSLOp.OpAsmINTEL, OperandKind.IdRef, OperandQuantifier.One, "target", "@exclude");
        Instance.Register(SDSLOp.OpAsmINTEL, OperandKind.LiteralString, OperandQuantifier.One, "asminstructions", "@exclude");
        Instance.Register(SDSLOp.OpAsmINTEL, OperandKind.LiteralString, OperandQuantifier.One, "constraints", "@exclude");
        Instance.Register(SDSLOp.OpAsmCallINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpAsmCallINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpAsmCallINTEL, OperandKind.IdRef, OperandQuantifier.One, "asm", "@exclude");
        Instance.Register(SDSLOp.OpAsmCallINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "@exclude");
        Instance.Register(SDSLOp.OpAtomicFMinEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMinEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMinEXT, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMinEXT, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMinEXT, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMinEXT, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMaxEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMaxEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMaxEXT, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMaxEXT, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMaxEXT, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFMaxEXT, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpAssumeTrueKHR, OperandKind.IdRef, OperandQuantifier.One, "condition", "Miscellaneous");
        Instance.Register(SDSLOp.OpExpectKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Miscellaneous");
        Instance.Register(SDSLOp.OpExpectKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpExpectKHR, OperandKind.IdRef, OperandQuantifier.One, "value", "Miscellaneous");
        Instance.Register(SDSLOp.OpExpectKHR, OperandKind.IdRef, OperandQuantifier.One, "expectedValue", "Miscellaneous");
        Instance.Register(SDSLOp.OpDecorateString, OperandKind.IdRef, OperandQuantifier.One, "target", "Annotation");
        Instance.Register(SDSLOp.OpDecorateString, OperandKind.Decoration, OperandQuantifier.One, "decoration", "Annotation");
        Instance.Register(SDSLOp.OpMemberDecorateString, OperandKind.IdRef, OperandQuantifier.One, "structType", "Annotation");
        Instance.Register(SDSLOp.OpMemberDecorateString, OperandKind.LiteralInteger, OperandQuantifier.One, "member", "Annotation");
        Instance.Register(SDSLOp.OpMemberDecorateString, OperandKind.Decoration, OperandQuantifier.One, "decoration", "Annotation");
        Instance.Register(SDSLOp.OpVmeImageINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpVmeImageINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpVmeImageINTEL, OperandKind.IdRef, OperandQuantifier.One, "imageType", "@exclude");
        Instance.Register(SDSLOp.OpVmeImageINTEL, OperandKind.IdRef, OperandQuantifier.One, "sampler", "@exclude");
        Instance.Register(SDSLOp.OpTypeVmeImageINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeVmeImageINTEL, OperandKind.IdRef, OperandQuantifier.One, "imageType", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcImePayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcRefPayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcSicPayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcMcePayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcMceResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcImeResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcImeResultSingleReferenceStreamoutINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcImeResultDualReferenceStreamoutINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcImeSingleReferenceStreaminINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcImeDualReferenceStreaminINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcRefResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpTypeAvcSicResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "sliceType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "qp", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "referenceBasePenalty", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "sliceType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "qp", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterShapePenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterShapePenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterShapePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedShapePenalty", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterShapePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "sliceType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "qp", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterDirectionPenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterDirectionPenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterDirectionPenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "directionCost", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetInterDirectionPenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "sliceType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "qp", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL, OperandKind.IdRef, OperandQuantifier.One, "sliceType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL, OperandKind.IdRef, OperandQuantifier.One, "qp", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedCostCenterDelta", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedCostTable", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "costPrecision", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "sliceType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "qp", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetAcOnlyHaarINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetAcOnlyHaarINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetAcOnlyHaarINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL, OperandKind.IdRef, OperandQuantifier.One, "sourceFieldPolarity", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL, OperandKind.IdRef, OperandQuantifier.One, "referenceFieldPolarity", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdRef, OperandQuantifier.One, "forwardReferenceFieldPolarity", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdRef, OperandQuantifier.One, "backwardReferenceFieldPolarity", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToImePayloadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToImePayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToImePayloadINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToImeResultINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToImeResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToImeResultINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToRefPayloadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToRefPayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToRefPayloadINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToRefResultINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToRefResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToRefResultINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToSicPayloadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToSicPayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToSicPayloadINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToSicResultINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToSicResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceConvertToSicResultINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetMotionVectorsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetMotionVectorsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetMotionVectorsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterDistortionsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterDistortionsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterDistortionsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetBestInterDistortionsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetBestInterDistortionsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetBestInterDistortionsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMajorShapeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMajorShapeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMajorShapeINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMinorShapeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMinorShapeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMinorShapeINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterDirectionsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterDirectionsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterDirectionsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMotionVectorCountINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMotionVectorCountINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterMotionVectorCountINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterReferenceIdsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterReferenceIdsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterReferenceIdsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedReferenceIds", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedReferenceParameterFieldPolarities", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeInitializeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeInitializeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcCoord", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "partitionMask", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "sADAdjustment", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetSingleReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetSingleReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "refOffset", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "searchWindowConfig", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetDualReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetDualReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "fwdRefOffset", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "bwdRefOffset", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "idSearchWindowConfig", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeRefWindowSizeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeRefWindowSizeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeRefWindowSizeINTEL, OperandKind.IdRef, OperandQuantifier.One, "searchWindowConfig", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeRefWindowSizeINTEL, OperandKind.IdRef, OperandQuantifier.One, "dualRef", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeAdjustRefOffsetINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeAdjustRefOffsetINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeAdjustRefOffsetINTEL, OperandKind.IdRef, OperandQuantifier.One, "refOffset", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeAdjustRefOffsetINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcCoord", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeAdjustRefOffsetINTEL, OperandKind.IdRef, OperandQuantifier.One, "refWindowSize", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeAdjustRefOffsetINTEL, OperandKind.IdRef, OperandQuantifier.One, "imageSize", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeConvertToMcePayloadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeConvertToMcePayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeConvertToMcePayloadINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetMaxMotionVectorCountINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetMaxMotionVectorCountINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetMaxMotionVectorCountINTEL, OperandKind.IdRef, OperandQuantifier.One, "maxMotionVectorCount", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetMaxMotionVectorCountINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetUnidirectionalMixDisableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetUnidirectionalMixDisableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetUnidirectionalMixDisableINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL, OperandKind.IdRef, OperandQuantifier.One, "threshold", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetWeightedSadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetWeightedSadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetWeightedSadINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedSadWeights", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeSetWeightedSadINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "refImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "fwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "bwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "refImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "streaminComponents", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "fwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "bwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "streaminComponents", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "refImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "fwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "bwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "refImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "streaminComponents", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "fwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "bwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "streaminComponents", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeConvertToMceResultINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeConvertToMceResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeConvertToMceResultINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetSingleReferenceStreaminINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetSingleReferenceStreaminINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetSingleReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetDualReferenceStreaminINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetDualReferenceStreaminINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetDualReferenceStreaminINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeStripSingleReferenceStreamoutINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeStripSingleReferenceStreamoutINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeStripSingleReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeStripDualReferenceStreamoutINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeStripDualReferenceStreamoutINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeStripDualReferenceStreamoutINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdRef, OperandQuantifier.One, "majorShape", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL, OperandKind.IdRef, OperandQuantifier.One, "majorShape", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdRef, OperandQuantifier.One, "majorShape", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdRef, OperandQuantifier.One, "majorShape", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL, OperandKind.IdRef, OperandQuantifier.One, "direction", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL, OperandKind.IdRef, OperandQuantifier.One, "majorShape", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL, OperandKind.IdRef, OperandQuantifier.One, "direction", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdRef, OperandQuantifier.One, "majorShape", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL, OperandKind.IdRef, OperandQuantifier.One, "direction", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetBorderReachedINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetBorderReachedINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetBorderReachedINTEL, OperandKind.IdRef, OperandQuantifier.One, "imageSelect", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetBorderReachedINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetTruncatedSearchIndicationINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetTruncatedSearchIndicationINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetTruncatedSearchIndicationINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcCoord", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "motionVectors", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "majorShapes", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "minorShapes", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "direction", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "pixelResolution", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcFmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "sadAdjustment", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcCoord", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "motionVectors", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "majorShapes", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "minorShapes", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "direction", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "pixelResolution", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "bidirectionalWeight", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcBmeInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "sadAdjustment", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefConvertToMcePayloadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefConvertToMcePayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefConvertToMcePayloadINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefSetBidirectionalMixDisableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefSetBidirectionalMixDisableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefSetBidirectionalMixDisableINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefSetBilinearFilterEnableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefSetBilinearFilterEnableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefSetBilinearFilterEnableINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "refImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithDualReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithDualReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "fwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "bwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedReferenceIds", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedReferenceIds", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedReferenceFieldPolarities", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefConvertToMceResultINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefConvertToMceResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcRefConvertToMceResultINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicInitializeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicInitializeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicInitializeINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcCoord", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureSkcINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureSkcINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureSkcINTEL, OperandKind.IdRef, OperandQuantifier.One, "skipBlockPartitionType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureSkcINTEL, OperandKind.IdRef, OperandQuantifier.One, "skipMotionVectorMask", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureSkcINTEL, OperandKind.IdRef, OperandQuantifier.One, "motionVectors", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureSkcINTEL, OperandKind.IdRef, OperandQuantifier.One, "bidirectionalWeight", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureSkcINTEL, OperandKind.IdRef, OperandQuantifier.One, "sadAdjustment", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureSkcINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdRef, OperandQuantifier.One, "lumaIntraPartitionMask", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdRef, OperandQuantifier.One, "intraNeighbourAvailabilty", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdRef, OperandQuantifier.One, "leftEdgeLumaPixels", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdRef, OperandQuantifier.One, "upperLeftCornerLumaPixel", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdRef, OperandQuantifier.One, "upperEdgeLumaPixels", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdRef, OperandQuantifier.One, "upperRightEdgeLumaPixels", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdRef, OperandQuantifier.One, "sadAdjustment", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "lumaIntraPartitionMask", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "intraNeighbourAvailabilty", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "leftEdgeLumaPixels", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "upperLeftCornerLumaPixel", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "upperEdgeLumaPixels", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "upperRightEdgeLumaPixels", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "leftEdgeChromaPixels", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "upperLeftCornerChromaPixel", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "upperEdgeChromaPixels", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "sadAdjustment", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetMotionVectorMaskINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetMotionVectorMaskINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetMotionVectorMaskINTEL, OperandKind.IdRef, OperandQuantifier.One, "skipBlockPartitionType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetMotionVectorMaskINTEL, OperandKind.IdRef, OperandQuantifier.One, "direction", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConvertToMcePayloadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConvertToMcePayloadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConvertToMcePayloadINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedShapePenalty", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "lumaModePenalty", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "lumaPackedNeighborModes", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "lumaPackedNonDcPenalty", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "chromaModeBasePenalty", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetBilinearFilterEnableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetBilinearFilterEnableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetBilinearFilterEnableINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetSkcForwardTransformEnableINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetSkcForwardTransformEnableINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetSkcForwardTransformEnableINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedSadCoefficients", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetSkcForwardTransformEnableINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL, OperandKind.IdRef, OperandQuantifier.One, "blockBasedSkipType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateIpeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateIpeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateIpeINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateIpeINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "refImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithDualReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithDualReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "fwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "bwdRefImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithDualReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedReferenceIds", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdRef, OperandQuantifier.One, "srcImage", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedReferenceIds", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdRef, OperandQuantifier.One, "packedReferenceFieldPolarities", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConvertToMceResultINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConvertToMceResultINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicConvertToMceResultINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetIpeLumaShapeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetIpeLumaShapeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetIpeLumaShapeINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetBestIpeLumaDistortionINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetBestIpeLumaDistortionINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetBestIpeLumaDistortionINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetBestIpeChromaDistortionINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetBestIpeChromaDistortionINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetBestIpeChromaDistortionINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedIpeLumaModesINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedIpeLumaModesINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedIpeLumaModesINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetIpeChromaModeINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetIpeChromaModeINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetIpeChromaModeINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetInterRawSadsINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetInterRawSadsINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpSubgroupAvcSicGetInterRawSadsINTEL, OperandKind.IdRef, OperandQuantifier.One, "payload", "@exclude");
        Instance.Register(SDSLOp.OpVariableLengthArrayINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpVariableLengthArrayINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpVariableLengthArrayINTEL, OperandKind.IdRef, OperandQuantifier.One, "lenght", "@exclude");
        Instance.Register(SDSLOp.OpSaveMemoryINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpSaveMemoryINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpRestoreMemoryINTEL, OperandKind.IdRef, OperandQuantifier.One, "ptr", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "fromSign", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastFromIntINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastFromIntINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastFromIntINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastFromIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastFromIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "fromSign", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastFromIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastFromIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastFromIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastToIntINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastToIntINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastToIntINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastToIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastToIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastToIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCastToIntINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatAddINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSubINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatMulINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatDivINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGTINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGTINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGTINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGTINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGTINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGTINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGEINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGEINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGEINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGEINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGEINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatGEINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLTINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLTINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLTINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLTINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLTINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLTINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLEINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLEINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLEINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLEINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLEINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLEINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatEQINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatEQINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatEQINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatEQINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatEQINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatEQINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRecipINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRecipINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRecipINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRSqrtINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRSqrtINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRSqrtINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatRSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCbrtINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCbrtINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCbrtINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCbrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCbrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCbrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCbrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCbrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatHypotINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSqrtINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSqrtINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSqrtINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLogINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLogINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLogINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog2INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog2INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog2INTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog10INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog10INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog10INTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog1pINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog1pINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog1pINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog1pINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog1pINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog1pINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog1pINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatLog1pINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp2INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp2INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp2INTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp10INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp10INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp10INTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExp10INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpm1INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpm1INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpm1INTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpm1INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpm1INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpm1INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpm1INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatExpm1INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatASinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatACosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATanPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatATan2INTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m2", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowRINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.IdRef, OperandQuantifier.One, "a", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "m1", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.IdRef, OperandQuantifier.One, "b", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "mout", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "enableSubnormals", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingMode", "@exclude");
        Instance.Register(SDSLOp.OpArbitraryFloatPowNINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "roundingAccuracy", "@exclude");
        Instance.Register(SDSLOp.OpLoopControlINTEL, OperandKind.LiteralInteger, OperandQuantifier.ZeroOrMore, "values", "Reserved");
        Instance.Register(SDSLOp.OpAliasDomainDeclINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpAliasDomainDeclINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "name", "@exclude");
        Instance.Register(SDSLOp.OpAliasScopeDeclINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpAliasScopeDeclINTEL, OperandKind.IdRef, OperandQuantifier.One, "aliasDomain", "@exclude");
        Instance.Register(SDSLOp.OpAliasScopeDeclINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrOne, "name", "@exclude");
        Instance.Register(SDSLOp.OpAliasScopeListDeclINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpAliasScopeListDeclINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedSqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedRecipINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedRsqrtINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedSinCosPiINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedLogINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputType", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "s", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "i", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "rI", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "q", "@exclude");
        Instance.Register(SDSLOp.OpFixedExpINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "o", "@exclude");
        Instance.Register(SDSLOp.OpPtrCastToCrossWorkgroupINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpPtrCastToCrossWorkgroupINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpPtrCastToCrossWorkgroupINTEL, OperandKind.IdRef, OperandQuantifier.One, "pointer", "@exclude");
        Instance.Register(SDSLOp.OpCrossWorkgroupCastToPtrINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "@exclude");
        Instance.Register(SDSLOp.OpCrossWorkgroupCastToPtrINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "@exclude");
        Instance.Register(SDSLOp.OpCrossWorkgroupCastToPtrINTEL, OperandKind.IdRef, OperandQuantifier.One, "pointer", "@exclude");
        Instance.Register(SDSLOp.OpReadPipeBlockingINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpReadPipeBlockingINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpReadPipeBlockingINTEL, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpReadPipeBlockingINTEL, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpWritePipeBlockingINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Pipe");
        Instance.Register(SDSLOp.OpWritePipeBlockingINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Pipe");
        Instance.Register(SDSLOp.OpWritePipeBlockingINTEL, OperandKind.IdRef, OperandQuantifier.One, "packetSize", "Pipe");
        Instance.Register(SDSLOp.OpWritePipeBlockingINTEL, OperandKind.IdRef, OperandQuantifier.One, "packetAlignment", "Pipe");
        Instance.Register(SDSLOp.OpFPGARegINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpFPGARegINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpFPGARegINTEL, OperandKind.IdRef, OperandQuantifier.One, "result", "Reserved");
        Instance.Register(SDSLOp.OpFPGARegINTEL, OperandKind.IdRef, OperandQuantifier.One, "input", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetRayTMinKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetRayTMinKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetRayTMinKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetRayFlagsKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetRayFlagsKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetRayFlagsKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionTKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceCustomIndexKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceCustomIndexKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceCustomIndexKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceCustomIndexKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceIdKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceIdKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceIdKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceIdKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionGeometryIndexKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionGeometryIndexKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionGeometryIndexKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionGeometryIndexKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionPrimitiveIndexKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionPrimitiveIndexKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionPrimitiveIndexKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionPrimitiveIndexKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionBarycentricsKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionBarycentricsKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionBarycentricsKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionBarycentricsKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionFrontFaceKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionFrontFaceKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionFrontFaceKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionFrontFaceKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionCandidateAABBOpaqueKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionCandidateAABBOpaqueKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionCandidateAABBOpaqueKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectRayDirectionKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectRayDirectionKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectRayDirectionKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectRayDirectionKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectRayOriginKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectRayOriginKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectRayOriginKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectRayOriginKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetWorldRayDirectionKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetWorldRayDirectionKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetWorldRayDirectionKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetWorldRayOriginKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetWorldRayOriginKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetWorldRayOriginKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectToWorldKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectToWorldKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectToWorldKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionObjectToWorldKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionWorldToObjectKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionWorldToObjectKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionWorldToObjectKHR, OperandKind.IdRef, OperandQuantifier.One, "rayQuery", "Reserved");
        Instance.Register(SDSLOp.OpRayQueryGetIntersectionWorldToObjectKHR, OperandKind.IdRef, OperandQuantifier.One, "intersection", "Reserved");
        Instance.Register(SDSLOp.OpAtomicFAddEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFAddEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFAddEXT, OperandKind.IdRef, OperandQuantifier.One, "pointer", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFAddEXT, OperandKind.IdScope, OperandQuantifier.One, "memory", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFAddEXT, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Atomic");
        Instance.Register(SDSLOp.OpAtomicFAddEXT, OperandKind.IdRef, OperandQuantifier.One, "value", "Atomic");
        Instance.Register(SDSLOp.OpTypeBufferSurfaceINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeBufferSurfaceINTEL, OperandKind.AccessQualifier, OperandQuantifier.One, "accessQualifier", "Type-Declaration");
        Instance.Register(SDSLOp.OpTypeStructContinuedINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Type-Declaration");
        Instance.Register(SDSLOp.OpConstantCompositeContinuedINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Constant-Creation");
        Instance.Register(SDSLOp.OpSpecConstantCompositeContinuedINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Constant-Creation");
        Instance.Register(SDSLOp.OpCompositeConstructContinuedINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Composite");
        Instance.Register(SDSLOp.OpCompositeConstructContinuedINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Composite");
        Instance.Register(SDSLOp.OpCompositeConstructContinuedINTEL, OperandKind.IdRef, OperandQuantifier.ZeroOrMore, "values", "Composite");
        Instance.Register(SDSLOp.OpConvertFToBF16INTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpConvertFToBF16INTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpConvertFToBF16INTEL, OperandKind.IdRef, OperandQuantifier.One, "floatValue", "Conversion");
        Instance.Register(SDSLOp.OpConvertBF16ToFINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Conversion");
        Instance.Register(SDSLOp.OpConvertBF16ToFINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Conversion");
        Instance.Register(SDSLOp.OpConvertBF16ToFINTEL, OperandKind.IdRef, OperandQuantifier.One, "bFloat16Value", "Conversion");
        Instance.Register(SDSLOp.OpControlBarrierArriveINTEL, OperandKind.IdScope, OperandQuantifier.One, "execution", "Barrier");
        Instance.Register(SDSLOp.OpControlBarrierArriveINTEL, OperandKind.IdScope, OperandQuantifier.One, "memory", "Barrier");
        Instance.Register(SDSLOp.OpControlBarrierArriveINTEL, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Barrier");
        Instance.Register(SDSLOp.OpControlBarrierWaitINTEL, OperandKind.IdScope, OperandQuantifier.One, "execution", "Barrier");
        Instance.Register(SDSLOp.OpControlBarrierWaitINTEL, OperandKind.IdScope, OperandQuantifier.One, "memory", "Barrier");
        Instance.Register(SDSLOp.OpControlBarrierWaitINTEL, OperandKind.IdMemorySemantics, OperandQuantifier.One, "semantics", "Barrier");
        Instance.Register(SDSLOp.OpArithmeticFenceEXT, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Miscellaneous");
        Instance.Register(SDSLOp.OpArithmeticFenceEXT, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Miscellaneous");
        Instance.Register(SDSLOp.OpArithmeticFenceEXT, OperandKind.IdRef, OperandQuantifier.One, "target", "Miscellaneous");
        Instance.Register(SDSLOp.OpSubgroupBlockPrefetchINTEL, OperandKind.IdRef, OperandQuantifier.One, "ptr", "Group");
        Instance.Register(SDSLOp.OpSubgroupBlockPrefetchINTEL, OperandKind.IdRef, OperandQuantifier.One, "numBytes", "Group");
        Instance.Register(SDSLOp.OpSubgroupBlockPrefetchINTEL, OperandKind.MemoryAccess, OperandQuantifier.ZeroOrOne, "memoryaccess", "Group");
        Instance.Register(SDSLOp.OpGroupIMulKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupIMulKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupIMulKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupIMulKHR, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupIMulKHR, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupFMulKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupFMulKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupFMulKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupFMulKHR, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupFMulKHR, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseAndKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseAndKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseAndKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseAndKHR, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseAndKHR, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseOrKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseOrKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseOrKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseOrKHR, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseOrKHR, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseXorKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseXorKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseXorKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseXorKHR, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupBitwiseXorKHR, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalAndKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalAndKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalAndKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalAndKHR, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalAndKHR, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalOrKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalOrKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalOrKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalOrKHR, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalOrKHR, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalXorKHR, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalXorKHR, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalXorKHR, OperandKind.IdScope, OperandQuantifier.One, "execution", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalXorKHR, OperandKind.GroupOperation, OperandQuantifier.One, "operation", "Group");
        Instance.Register(SDSLOp.OpGroupLogicalXorKHR, OperandKind.IdRef, OperandQuantifier.One, "x", "Group");
        Instance.Register(SDSLOp.OpMaskedGatherINTEL, OperandKind.IdResultType, OperandQuantifier.One, "resultType", "Memory");
        Instance.Register(SDSLOp.OpMaskedGatherINTEL, OperandKind.IdResult, OperandQuantifier.One, "resultId", "Memory");
        Instance.Register(SDSLOp.OpMaskedGatherINTEL, OperandKind.IdRef, OperandQuantifier.One, "ptrVector", "Memory");
        Instance.Register(SDSLOp.OpMaskedGatherINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "alignment", "Memory");
        Instance.Register(SDSLOp.OpMaskedGatherINTEL, OperandKind.IdRef, OperandQuantifier.One, "mask", "Memory");
        Instance.Register(SDSLOp.OpMaskedGatherINTEL, OperandKind.IdRef, OperandQuantifier.One, "fillEmpty", "Memory");
        Instance.Register(SDSLOp.OpMaskedScatterINTEL, OperandKind.IdRef, OperandQuantifier.One, "inputVector", "Memory");
        Instance.Register(SDSLOp.OpMaskedScatterINTEL, OperandKind.IdRef, OperandQuantifier.One, "ptrVector", "Memory");
        Instance.Register(SDSLOp.OpMaskedScatterINTEL, OperandKind.LiteralInteger, OperandQuantifier.One, "alignment", "Memory");
        Instance.Register(SDSLOp.OpMaskedScatterINTEL, OperandKind.IdRef, OperandQuantifier.One, "mask", "Memory");
        Instance.InitOrder();
    }
}