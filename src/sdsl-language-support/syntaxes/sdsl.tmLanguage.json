{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "SDSL",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#preprocessors"
        },
        {
            "include": "#sdsl-declarations"
        }
    ],
    "repository": {
        "sdsl-declarations": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#namespace"
                },
                {
                    "include": "#shader-class"
                },
                {
                    "include": "#effect-class"
                },
                {
                    "include": "#modifiers"
                }
            ]
        },
        "test": {
            "name": "test",
            "begin": "(?=read\\s)",
            "end": "(?=;)",
            "patterns": [
                {
                    "begin": "(read)\\s",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type"
                        }
                    },
                    "end": "(?=;)",
                    "patterns": [
                        {
                            "name": "variable.name",
                            "match": "[ad]+"
                        },
                        {
                            "name": "entity.name.class",
                            "match": "[bo]+"
                        }
                    ]
                }
            ]
        },
        "namespace": {
            "patterns": [
                {
                    "name": "namespace.declaration.sdsl",
                    "begin": "(?=namespace\\s+)",
                    "end": "(;|\\})",
                    "patterns": [
                        {
                            "begin": "(namespace)",
                            "beginCaptures": {
                                "1": {
                                    "name": "storage.type"
                                }
                            },
                            "end": "(?=(;|\\{))",
                            "patterns": [
                                {
                                    "name": "entity.name.class",
                                    "match": "([a-zA-Z_]\\w*)"
                                }
                            ]
                        },
                        {
                            "name": "namespace.body.sdsl",
                            "begin": "(?=\\{)",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#sdsl-declarations"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "modifiers": {
            "name": "storage.internal",
            "match": "(internal|partial)\\s"
        },
        "effect-class": {
            "name": "effect-class.sdsl",
            "begin": "(?=effect)",
            "end": "(;|\\})",
            "patterns": [
                {
                    "name": "effect-class.naming.sdsl",
                    "begin": "(effect)",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type"
                        }
                    },
                    "end": "(?=(;|\\{))",
                    "patterns": [
                        {
                            "name": "entity.name.class",
                            "match": "\\b[a-zA-Z_]\\w*\\b"
                        }
                    ]
                },
                {
                    "name": "effect.body.sdsl",
                    "begin": "(?=\\{)",
                    "end": "(?=\\)}"
                }
            ]
        },
        "shader-class": {
            "name": "shader-class.sdsl",
            "begin": "(?=shader)",
            "end": "(\\}|;)",
            "patterns": [
                {
                    "name": "shader-class.naming.sdsl",
                    "begin": "(shader)",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type"
                        }
                    },
                    "end": "(?=(:|;|\\{))",
                    "patterns": [
                        {
                            "name": "entity.name.class",
                            "match": "\\b[a-zA-Z_]\\w*\\b"
                        }
                    ]
                },
                {
                    "name": "shader.body.sdsl",
                    "begin": "(?=\\{)",
                    "end": "(?=\\})",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#shader-elements"
                        }
                    ]
                }
            ]
        },
        "shader-generics": {
            "patterns": [
                {
                    "match": "([a-zA-Z_]\\w*)\\s+([a-zA-Z_]\\w*)",
                    "captures": {
                        "1": {
                            "patterns": [
                                {
                                    "include": "#typename"
                                }
                            ]
                        },
                        "2": {
                            "name": "variable.name"
                        }
                    }
                }
            ]
        },
        "mixin-inheritance": {
            "patterns": [
                {
                    "name": "entity.name.type",
                    "match": "[a-zA-Z_]\\w*"
                }
            ]
        },
        "shader-elements": {
            "patterns": [
                {
                    "include": "#preprocessors"
                },
                {
                    "include": "#attribute"
                },
                {
                    "include": "#struct-declaration"
                },
                {
                    "include": "#shader-member-declaration"
                }
            ]
        },
        "shader-member-declaration": {
            "patterns": [
                {
                    "match": "(stage|stream|patchstream|compose)\\s",
                    "name" : "storage.modifier.mixin"
                },
                {
                    "match": "(override|abstract|virtual)\\s",
                    "name" : "storage.modifier.functions"
                },
                {
                    "match": "(extern|noInterpolation|precise|shared|groupShared|static|uniform|volatile)\\s",
                    "name" : "storage.modifier.storageclass"
                },
                {
                    "match": "(linear|centroid|nointerpolation|noperspective|sample)\\s",
                    "name" : "storage.modifier.interpolation"
                },
                {
                    "match": "(const|rowmajor|columnmajor)\\s",
                    "name" : "storage.modifier.typemodifier"
                },
                {
                    "name" : "meta.buffer.sdsl",
                    "begin": "(cbuffer|tbuffer|rgroup)\\s+(\\w+(\\.\\w+)*)",
                    "beginCaptures": {
                        "1" : {"name": "storage.type"},
                        "2" : {"name": "entity.name.class"}
                    },
                    "end": "\\}",
                    "patterns": [
                        {
                            "begin": "\\{",
                            "end": "(?=\\})",
                            "name" : "meta.buffer.body",
                            "patterns": [
                                {
                                    "include": "#comments"
                                },
                                {
                                    "match": "(stage)\\s+",
                                    "name" : "storage.modifier.mixin"
                                },
                                {
                                    "include": "#struct-fields"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name" : "meta.member.sdsl",
                    "begin": "(void|((u?int|u?long|half|float|double)([2-4](x[2-4])?)?))|(\\w+)\\s+",
                    "end": ";|(})",
                    "beginCaptures": {
                        "1" : {"name" : "storage.type"},
                        "6" : {"name" : "entity.name.type"}
                    },
                    "patterns": [
                        {
                            "match": "(\\w+)\\s*(:.*?)+(?=;)",
                            "captures": {
                                "1" : {"name" : "variable.name"},
                                "2" : {"patterns": [{"include": "#literals"}]}                            }
                        },
                        {
                            "match": "(\\w+)\\s*(\\[(.*?)\\]\\s*)?(?=;)",
                            "captures": {
                                "1" : {"name" : "variable.name"},
                                "3" : {"patterns": [{"include": "#literals"}]}
                            }
                        },
                        {
                            "begin": "(\\w+)\\s*=",
                            "end": "(?=;)",
                            "beginCaptures": {"1" : {"name" : "variable.name"}},
                            "patterns": [{"include": "#literals"}],
                            "name" : "meta.value"
                        },
                        {
                            "match": "(\\w+)\\s*(?=\\()",
                            "name" : "entity.name.function"
                        },
                        {
                            "begin": "\\(",
                            "end": "\\)",
                            "name" : "meta.function.parameters",
                            "patterns": [
                                {"include": "#parameter-list"}
                            ]
                        },
                        {
                            "begin": "\\{",
                            "end": "(?=\\})",
                            "name" : "meta.function.body"
                        }
                    ]
                }
            ]
        },
        "struct-declaration": {
            "name": "struct.declaration.sdsl",
            "begin": "(struct)\\s+([a-zA-Z]\\w*)\\s*\\{",
            "beginCaptures": {
                "1": {
                    "name": "storage.type"
                },
                "2": {
                    "name": "entity.name.type"
                }
            },
            "end": "\\}",
            "patterns": [
                {
                    "include": "#attribute"
                },
                {
                    "include": "#struct-fields"
                }
            ]
        },
        "struct-fields": {
            "patterns": [
                {
                    "include": "#attribute"
                },
                {
                    "match": "\\b((stage)\\s+)?([a-zA-Z_]\\w*)\\s+([a-zA-Z_]\\w*)\\s*(\\[\\s*(.*\\s*)?\\]\\s*)?;",
                    "captures": {
                        "2": {
                            "name": "storage.modifier"
                        },
                        "3": {
                            "name": "entity.name.type"
                        },
                        "4": {
                            "name": "variable.name"
                        },
                        "6": {
                            "patterns": [
                                {
                                    "include": "#literals"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "\\b((stage)\\s+)?([a-zA-Z_]\\w*)(\\s*\\[\\s*(.*\\s*)?\\])?\\s+([a-zA-Z_]\\w*)\\s*;",
                    "captures": {
                        "2": {
                            "name": "storage.modifier"
                        },
                        "3": {
                            "name": "entity.name.type"
                        },
                        "4": {
                            "patterns": [
                                {
                                    "include": "#literals"
                                }
                            ]
                        },
                        "6": {
                            "name": "variable.name"
                        }
                    }
                }
            ]
        },
        "attribute": {
            "name": "meta.attribute.sdsl",
            "begin": "\\[",
            "end": "\\]",
            "patterns": [
                {
                    "include": "#method-call"
                },
                {
                    "name": "entity.other.attribute-name",
                    "match": "[a-zA-Z_]\\w*\\b"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "patterns": [
                        {
                            "name": "constant.numeric.float",
                            "match": "\\b\\d+\\.\\d*(f(16|32|64)?|F|d|D|h|H)?\\b"
                        },
                        {
                            "name": "constant.numeric.integer",
                            "match": "\\b\\d+\\b"
                        },
                        {
                            "name": "constant.numeric.float",
                            "match": "\\b\\.\\d+\\b"
                        },
                        {
                            "name": "string.quoted.double",
                            "begin": "\"",
                            "end": "\"",
                            "patterns": [
                                {
                                    "name": "constant.character.escape",
                                    "match": "\\\\."
                                }
                            ]
                        },
                        {
                            "include": "#method-call"
                        },
                        {
                            "name": "variable.name",
                            "match": "\\b[a-zA-Z_]\\w*\\b"
                        }
                    ]
                }
            ]
        },
        "typename": {
            "patterns": [
                {
                    "name": "storage.type",
                    "match": "(bool|short|ushort|half|int|uint|float|long|ulong|double)([1-4](x[1-4])?)?"
                },
                {
                    "name": "entity.name.type",
                    "match": "[a-zA-Z_]\\w*"
                }
            ]
        },
        "method-call": {
            "name": "meta.function-call",
            "begin": "\\b[a-zA-Z_]\\w*\\s*\\(",
            "beginCaptures": {
                "0": {
                    "name": "entity.name.function"
                }
            },
            "end": "\\)",
            "patterns": [
                {
                    "include": "#literals"
                }
            ]
        },
        "custom-typename": {
            "name": "entity.name.class",
            "patterns": [
                {
                    "include": "#identifier"
                }
            ]
        },
        "identifier": {
            "match": "\\b[a-zA-Z_]\\w*\\b"
        },
        "preprocessors": {
            "patterns": [
                {
                    "match": "^[ \t]*(#define)[ \t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \t]*\n",
                    "captures": {
                        "1": {
                            "name": "keyword.preprocessor.sdsl"
                        },
                        "2": {
                            "name": "variable.preprocessor.sdsl"
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#define)[ \t]+([a-zA-Z_][a-zA-Z0-9_]*)([ \t]+([a-zA-Z0-9_.]+))[ \t]*\n",
                    "captures": {
                        "1": {
                            "name": "keyword.preprocessor.sdsl"
                        },
                        "2": {
                            "name": "variable.preprocessor.sdsl"
                        },
                        "3": {
                            "patterns": [
                                {
                                    "include": "#literals"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#define)[ \t]+([a-zA-Z_][a-zA-Z0-9_]*[ \t]*\\(.?*\\))([ \t]+([a-zA-Z0-9_.]+[ \t]*\\(.?*\\)))[ \t]*\n",
                    "captures": {
                        "1": {
                            "name": "keyword.preprocessor.sdsl"
                        },
                        "2": {
                            "name": "variable.preprocessor.sdsl"
                        },
                        "3": {
                            "name": "constant.preprocessor.sdsl"
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#ifdef|#ifndef)[ \t]+([a-zA-Z0-9_]+)[ \t]*\n",
                    "captures": {
                        "1": {
                            "name": "keyword.preprocessor.sdsl"
                        },
                        "2": {
                            "name": "variable.preprocessor.sdsl"
                        },
                        "3": {
                            "name": "constant.preprocessor.sdsl"
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#endif|#else)[ \t]*\n",
                    "captures": {
                        "1": {
                            "name": "keyword.preprocessor.sdsl"
                        },
                        "2": {
                            "name": "variable.preprocessor.sdsl"
                        },
                        "3": {
                            "name": "constant.preprocessor.sdsl"
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#if).*?\n",
                    "captures": {
                        "1": {
                            "name": "keyword.preprocessor.sdsl"
                        },
                        "2": {
                            "name": "variable.preprocessor.sdsl"
                        },
                        "3": {
                            "name": "constant.preprocessor.sdsl"
                        }
                    }
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.block.sdsl",
                    "begin": "/\\*",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.sdsl"
                        }
                    },
                    "end": "\\*/",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.sdsl"
                        }
                    }
                },
                {
                    "name": "comment.block.documentation",
                    "begin": "(^\\s+)?(?=///)",
                    "end": "(?=$)",
                    "beginCaptures": {
                        "2": {
                            "name": "punctuation.whitespace.comment.leading.sdsl"
                        }
                    }
                },
                {
                    "begin": "(^\\s+)?(?=//)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.sdsl"
                        }
                    },
                    "end": "(?=$)",
                    "patterns": [
                        {
                            "name": "comment.block.documentation.sdsl",
                            "begin": "(?<!/)///(?!/)",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.sdsl"
                                }
                            },
                            "end": "(?=$)",
                            "patterns": [
                                {
                                    "include": "#xml-doc-comment"
                                }
                            ]
                        },
                        {
                            "name": "comment.line.double-slash.sdsl",
                            "begin": "(?<!/)//(?:(?!/)|(?=//))",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.sdsl"
                                }
                            },
                            "end": "(?=$)"
                        }
                    ]
                }
            ]
        }
    },
    "scopeName": "source.sdsl"
}