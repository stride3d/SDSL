{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "SDSL",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#preprocessors"
        },
        {
            "include": "#declarations"
        }
    ],
    "repository": {
        "declarations": {
            "patterns": [
                {
                    "include": "#namespace-declaration"
                }
            ]
        },
        "preprocessors" : {
            "patterns": [
                {
                    "match": "^[ \t]*(#define)[ \t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \t]*\n",
                    "captures": {
                        "1" : {
                            "name" : "keyword.preprocessor.sdsl"
                        },
                        "2" : {
                            "name" : "variable.preprocessor.sdsl"
                        },
                        "3" : {
                            "patterns": [
                                {"include": "#literals"}
                            ]
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#define)[ \t]+([a-zA-Z_][a-zA-Z0-9_]*)([ \t]+([a-zA-Z0-9_.]+))[ \t]*\n",
                    "captures": {
                        "1" : {
                            "name" : "keyword.preprocessor.sdsl"
                        },
                        "2" : {
                            "name" : "variable.preprocessor.sdsl"
                        },
                        "3" : {
                            "patterns": [
                                {"include": "#literals"}
                            ]
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#define)[ \t]+([a-zA-Z_][a-zA-Z0-9_]*[ \t]*\\(.?*\\))([ \t]+([a-zA-Z0-9_.]+[ \t]*\\(.?*\\)))[ \t]*\n",
                    "captures": {
                        "1" : {
                            "name" : "keyword.preprocessor.sdsl"
                        },
                        "2" : {
                            "name" : "variable.preprocessor.sdsl"
                        },
                        "3" : {
                            "name" : "constant.preprocessor.sdsl"
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#ifdef|#ifndef)[ \t]+([a-zA-Z0-9_]+)[ \t]*\n",
                    "captures": {
                        "1" : {
                            "name" : "keyword.preprocessor.sdsl"
                        },
                        "2" : {
                            "name" : "variable.preprocessor.sdsl"
                        },
                        "3" : {
                            "name" : "constant.preprocessor.sdsl"
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#endif|#else)[ \t]*\n",
                    "captures": {
                        "1" : {
                            "name" : "keyword.preprocessor.sdsl"
                        },
                        "2" : {
                            "name" : "variable.preprocessor.sdsl"
                        },
                        "3" : {
                            "name" : "constant.preprocessor.sdsl"
                        }
                    }
                },
                {
                    "match": "^[ \t]*(#if).*?\n",
                    "captures": {
                        "1" : {
                            "name" : "keyword.preprocessor.sdsl"
                        },
                        "2" : {
                            "name" : "variable.preprocessor.sdsl"
                        },
                        "3" : {
                            "name" : "constant.preprocessor.sdsl"
                        }
                    }
                }
            ]
        },
        "comments" : {
            "patterns": [
                {
                    "name": "comment.block.sdsl",
                    "begin": "/\\*",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.sdsl"
                        }
                    },
                    "end": "\\*/",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.sdsl"
                        }
                    }
                },
                {
                    "name" : "comment.block.documentation",
                    "begin": "(^\\s+)?(?=///)",
                    "end": "(?=$)",
                    "beginCaptures": {
                        "2": {
                            "name": "punctuation.whitespace.comment.leading.sdsl"
                        }
                    }
                },
                {
                    "begin": "(^\\s+)?(?=//)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.sdsl"
                        }
                    },
                    "end": "(?=$)",
                    "patterns": [
                        {
                            "name": "comment.block.documentation.sdsl",
                            "begin": "(?<!/)///(?!/)",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.sdsl"
                                }
                            },
                            "end": "(?=$)",
                            "patterns": [
                                {
                                    "include": "#xml-doc-comment"
                                }
                            ]
                        },
                        {
                            "name": "comment.line.double-slash.sdsl",
                            "begin": "(?<!/)//(?:(?!/)|(?=//))",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.sdsl"
                                }
                            },
                            "end": "(?=$)"
                        }
                    ]
                }
            ]
        },
        "literals" : {
            "patterns": [
                {
                    "name" : "constant.numeric.sdsl",
                    "patterns": [
                        {
                            "name" : "constant.numeric.float.simple.sdsl",
                            "patterns": [
                                {
                                    "match": "([1-9][0-9]*|[0-9])\\.[0-9]*(h|H|f16|f|F|f32|d|D|f64)?"
                                },
                                {
                                    "match": "\\.[0-9]+(h|H|f16|f|F|f32|d|D|f64)?"
                                }
                            ]
                        },
                        {
                            "name" : "constant.numeric.integer.sdsl",
                            "match": "([1-9][0-9]*|[0-9])(i32|u|U|u32|l|L|i64|ul|UL|u64)?"
                        }
                    ]
                }
            ]
        }
        
    },
    "scopeName": "source.sdsl"
}